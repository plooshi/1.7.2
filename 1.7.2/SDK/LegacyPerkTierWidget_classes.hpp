#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LegacyPerkTierWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LegacyPerkTierWidget.LegacyPerkTierWidget_C
// 0x0030 (0x0290 - 0x0260)
class ULegacyPerkTierWidget_C final : public UFortPerkTierWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class UVerticalBox*                           PerkList;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacyPerkWidget_C*                    PerkWidget;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacyPerkWidget_C*                    PerkWidget_0;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacyPerkWidget_C*                    PerkWidget_1;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bTextOnly;                                         // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_LegacyPerkTierWidget(int32 EntryPoint);
	void OnGeneratePerk(const struct FFortUIPerk& Perk);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LegacyPerkTierWidget_C">();
	}
	static class ULegacyPerkTierWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULegacyPerkTierWidget_C>();
	}
};
static_assert(alignof(ULegacyPerkTierWidget_C) == 0x000008, "Wrong alignment on ULegacyPerkTierWidget_C");
static_assert(sizeof(ULegacyPerkTierWidget_C) == 0x000290, "Wrong size on ULegacyPerkTierWidget_C");
static_assert(offsetof(ULegacyPerkTierWidget_C, UberGraphFrame) == 0x000260, "Member 'ULegacyPerkTierWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULegacyPerkTierWidget_C, PerkList) == 0x000268, "Member 'ULegacyPerkTierWidget_C::PerkList' has a wrong offset!");
static_assert(offsetof(ULegacyPerkTierWidget_C, PerkWidget) == 0x000270, "Member 'ULegacyPerkTierWidget_C::PerkWidget' has a wrong offset!");
static_assert(offsetof(ULegacyPerkTierWidget_C, PerkWidget_0) == 0x000278, "Member 'ULegacyPerkTierWidget_C::PerkWidget_0' has a wrong offset!");
static_assert(offsetof(ULegacyPerkTierWidget_C, PerkWidget_1) == 0x000280, "Member 'ULegacyPerkTierWidget_C::PerkWidget_1' has a wrong offset!");
static_assert(offsetof(ULegacyPerkTierWidget_C, bTextOnly) == 0x000288, "Member 'ULegacyPerkTierWidget_C::bTextOnly' has a wrong offset!");

}

