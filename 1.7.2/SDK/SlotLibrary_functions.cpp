#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlotLibrary

#include "Basic.hpp"

#include "SlotLibrary_classes.hpp"
#include "SlotLibrary_parameters.hpp"


namespace SDK
{

// Function SlotLibrary.SlotLibrary_C.InitItemWidget
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItemWidget*                  Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USlotLibrary_C::InitItemWidget(class UFortItemWidget* Widget, class UFortItem* Item, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SlotLibrary_C", "InitItemWidget");

	Params::SlotLibrary_C_InitItemWidget Parms{};

	Parms.Widget = Widget;
	Parms.Item = Item;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function SlotLibrary.SlotLibrary_C.EnsureIconBrush
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortMultiSizeBrush              Multi_size_Brush                                       (Parm)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateBrush                      Brush                                                  (Parm, OutParm)

void USlotLibrary_C::EnsureIconBrush(const struct FFortMultiSizeBrush& Multi_size_Brush, class UObject* __WorldContext, struct FSlateBrush* Brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SlotLibrary_C", "EnsureIconBrush");

	Params::SlotLibrary_C_EnsureIconBrush Parms{};

	Parms.Multi_size_Brush = std::move(Multi_size_Brush);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Brush != nullptr)
		*Brush = std::move(Parms.Brush);
}


// Function SlotLibrary.SlotLibrary_C.Calculate Current Pulsing Highlight Color
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     Base_Color                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Hightlight_Color                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Current_Color                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USlotLibrary_C::Calculate_Current_Pulsing_Highlight_Color(const struct FLinearColor& Base_Color, const struct FLinearColor& Hightlight_Color, class UObject* __WorldContext, struct FLinearColor* Current_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SlotLibrary_C", "Calculate Current Pulsing Highlight Color");

	Params::SlotLibrary_C_Calculate_Current_Pulsing_Highlight_Color Parms{};

	Parms.Base_Color = std::move(Base_Color);
	Parms.Hightlight_Color = std::move(Hightlight_Color);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Current_Color != nullptr)
		*Current_Color = std::move(Parms.Current_Color);
}


// Function SlotLibrary.SlotLibrary_C.Get Traits Of Workers
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UFortWorker*>              Workers                                                (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            Chief_Personality                                      (Parm, OutParm)
// struct FGameplayTagContainer            Crew_Personalities                                     (Parm, OutParm)
// struct FGameplayTagContainer            Crew_Set_Bonuses                                       (Parm, OutParm)

void USlotLibrary_C::Get_Traits_Of_Workers(TArray<class UFortWorker*>& Workers, class UObject* __WorldContext, struct FGameplayTagContainer* Chief_Personality, struct FGameplayTagContainer* Crew_Personalities, struct FGameplayTagContainer* Crew_Set_Bonuses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SlotLibrary_C", "Get Traits Of Workers");

	Params::SlotLibrary_C_Get_Traits_Of_Workers Parms{};

	Parms.Workers = std::move(Workers);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Workers = std::move(Parms.Workers);

	if (Chief_Personality != nullptr)
		*Chief_Personality = std::move(Parms.Chief_Personality);

	if (Crew_Personalities != nullptr)
		*Crew_Personalities = std::move(Parms.Crew_Personalities);

	if (Crew_Set_Bonuses != nullptr)
		*Crew_Set_Bonuses = std::move(Parms.Crew_Set_Bonuses);
}


// Function SlotLibrary.SlotLibrary_C.Create Attribute Modifier Tool Tip
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Owning_Player                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortAttributeInfo               Attribute_Info                                         (Parm)
// struct FGameplayTagContainer            Required_Gameplay_Tags                                 (Parm)
// class FText                             Required_Gameplay_Tags_Description                     (Parm)
// class FText                             Modifier_Source                                        (Parm)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USlotLibrary_C::Create_Attribute_Modifier_Tool_Tip(class APlayerController* Owning_Player, const struct FFortAttributeInfo& Attribute_Info, const struct FGameplayTagContainer& Required_Gameplay_Tags, const class FText& Required_Gameplay_Tags_Description, const class FText& Modifier_Source, class UObject* __WorldContext, class UWidget** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SlotLibrary_C", "Create Attribute Modifier Tool Tip");

	Params::SlotLibrary_C_Create_Attribute_Modifier_Tool_Tip Parms{};

	Parms.Owning_Player = Owning_Player;
	Parms.Attribute_Info = std::move(Attribute_Info);
	Parms.Required_Gameplay_Tags = std::move(Required_Gameplay_Tags);
	Parms.Required_Gameplay_Tags_Description = std::move(Required_Gameplay_Tags_Description);
	Parms.Modifier_Source = std::move(Modifier_Source);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SlotLibrary.SlotLibrary_C.Get Attribute Modifier Header Text
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFortAttributeInfo               Attribute_Info                                         (Parm)
// struct FGameplayTagContainer            Required_Tags                                          (Parm)
// class FText                             Required_Gameplay_Tags_Description                     (Parm)
// class UObject*                          __WorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText USlotLibrary_C::Get_Attribute_Modifier_Header_Text(const struct FFortAttributeInfo& Attribute_Info, const struct FGameplayTagContainer& Required_Tags, const class FText& Required_Gameplay_Tags_Description, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SlotLibrary_C", "Get Attribute Modifier Header Text");

	Params::SlotLibrary_C_Get_Attribute_Modifier_Header_Text Parms{};

	Parms.Attribute_Info = std::move(Attribute_Info);
	Parms.Required_Tags = std::move(Required_Tags);
	Parms.Required_Gameplay_Tags_Description = std::move(Required_Gameplay_Tags_Description);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

