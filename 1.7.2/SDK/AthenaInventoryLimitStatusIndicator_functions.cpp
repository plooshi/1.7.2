#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryLimitStatusIndicator

#include "Basic.hpp"

#include "AthenaInventoryLimitStatusIndicator_classes.hpp"
#include "AthenaInventoryLimitStatusIndicator_parameters.hpp"


namespace SDK
{

// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.ExecuteUbergraph_AthenaInventoryLimitStatusIndicator
// ()
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaInventoryLimitStatusIndicator_C::ExecuteUbergraph_AthenaInventoryLimitStatusIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryLimitStatusIndicator_C", "ExecuteUbergraph_AthenaInventoryLimitStatusIndicator");

	Params::AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.HandleWorldItemListChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortWorldItem*>           ItemsAdded                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UFortWorldItem*>           ItemsRemoved                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UAthenaInventoryLimitStatusIndicator_C::HandleWorldItemListChanged(const TArray<class UFortWorldItem*>& ItemsAdded, const TArray<class UFortWorldItem*>& ItemsRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryLimitStatusIndicator_C", "HandleWorldItemListChanged");

	Params::AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged Parms{};

	Parms.ItemsAdded = std::move(ItemsAdded);
	Parms.ItemsRemoved = std::move(ItemsRemoved);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaInventoryLimitStatusIndicator_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryLimitStatusIndicator_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaInventoryLimitStatusIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryLimitStatusIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.TrackWorldInventory
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaInventoryLimitStatusIndicator_C::TrackWorldInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryLimitStatusIndicator_C", "TrackWorldInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.RefreshWorldInventoryStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAthenaInventoryLimitStatusIndicator_C::RefreshWorldInventoryStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryLimitStatusIndicator_C", "RefreshWorldInventoryStatus");

	UObject::ProcessEvent(Func, nullptr);
}

}

