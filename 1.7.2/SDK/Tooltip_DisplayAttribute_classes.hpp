#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tooltip_DisplayAttribute

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortUIStylesheet_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Tooltip-DisplayAttribute.Tooltip-DisplayAttribute_C
// 0x0CE0 (0x0FF8 - 0x0318)
class UTooltip_DisplayAttribute_C final : public UFortAttributeListItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blink;                                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderBasicPairedValue;                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderBasicSingleValue;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonHover;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageHorizontalRuler;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePairedBuffArrow;                              // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageSingleBuffArrow;                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Paired;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Single;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        SwitcherDisplayType;                               // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBasicPairedLabel;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBasicPairedValue;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBasicSingleValue;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacyBasicGradientFill_C*             WidgetGradient;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FFortDisplayAttribute                  TooltipData;                                       // 0x0390(0x0070)(Edit, BlueprintVisible, ExposeOnSpawn)
	EFortStatValueDisplayType                     Display_Type;                                      // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortBuffState                                Buff_State;                                        // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortComparisonType                           Comparison_Type;                                   // 0x0402(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403[0x1];                                      // 0x0403(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Blank;                                             // 0x0404(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Base_Color;                                        // 0x0414(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Buff_Color;                                        // 0x0424(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_White;                                     // 0x0434(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortUIStylesheet                      Stylesheet;                                        // 0x0448(0x0BB0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Tooltip_DisplayAttribute(int32 EntryPoint);
	void PreviewEnded();
	void PreviewStarted();
	void ValueChanged(float Delta);
	void DisplayAttributeChanged();
	void BndEvt__ButtonHover_K2Node_ComponentBoundEvent_1037_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ButtonHover_K2Node_ComponentBoundEvent_1026_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void Update();
	void Update_Base___Buff_Colors();
	void UpdateValueText();
	class UWidget* GetToolTipWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tooltip-DisplayAttribute_C">();
	}
	static class UTooltip_DisplayAttribute_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTooltip_DisplayAttribute_C>();
	}
};
static_assert(alignof(UTooltip_DisplayAttribute_C) == 0x000008, "Wrong alignment on UTooltip_DisplayAttribute_C");
static_assert(sizeof(UTooltip_DisplayAttribute_C) == 0x000FF8, "Wrong size on UTooltip_DisplayAttribute_C");
static_assert(offsetof(UTooltip_DisplayAttribute_C, UberGraphFrame) == 0x000318, "Member 'UTooltip_DisplayAttribute_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Blink) == 0x000320, "Member 'UTooltip_DisplayAttribute_C::Blink' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, BorderBasicPairedValue) == 0x000328, "Member 'UTooltip_DisplayAttribute_C::BorderBasicPairedValue' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, BorderBasicSingleValue) == 0x000330, "Member 'UTooltip_DisplayAttribute_C::BorderBasicSingleValue' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, ButtonHover) == 0x000338, "Member 'UTooltip_DisplayAttribute_C::ButtonHover' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, ImageHorizontalRuler) == 0x000340, "Member 'UTooltip_DisplayAttribute_C::ImageHorizontalRuler' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, ImagePairedBuffArrow) == 0x000348, "Member 'UTooltip_DisplayAttribute_C::ImagePairedBuffArrow' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, ImageSingleBuffArrow) == 0x000350, "Member 'UTooltip_DisplayAttribute_C::ImageSingleBuffArrow' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Paired) == 0x000358, "Member 'UTooltip_DisplayAttribute_C::Paired' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Single) == 0x000360, "Member 'UTooltip_DisplayAttribute_C::Single' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, SwitcherDisplayType) == 0x000368, "Member 'UTooltip_DisplayAttribute_C::SwitcherDisplayType' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, TextBasicPairedLabel) == 0x000370, "Member 'UTooltip_DisplayAttribute_C::TextBasicPairedLabel' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, TextBasicPairedValue) == 0x000378, "Member 'UTooltip_DisplayAttribute_C::TextBasicPairedValue' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, TextBasicSingleValue) == 0x000380, "Member 'UTooltip_DisplayAttribute_C::TextBasicSingleValue' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, WidgetGradient) == 0x000388, "Member 'UTooltip_DisplayAttribute_C::WidgetGradient' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, TooltipData) == 0x000390, "Member 'UTooltip_DisplayAttribute_C::TooltipData' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Display_Type) == 0x000400, "Member 'UTooltip_DisplayAttribute_C::Display_Type' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Buff_State) == 0x000401, "Member 'UTooltip_DisplayAttribute_C::Buff_State' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Comparison_Type) == 0x000402, "Member 'UTooltip_DisplayAttribute_C::Comparison_Type' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Blank) == 0x000404, "Member 'UTooltip_DisplayAttribute_C::Blank' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Base_Color) == 0x000414, "Member 'UTooltip_DisplayAttribute_C::Base_Color' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Buff_Color) == 0x000424, "Member 'UTooltip_DisplayAttribute_C::Buff_Color' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Default_White) == 0x000434, "Member 'UTooltip_DisplayAttribute_C::Default_White' has a wrong offset!");
static_assert(offsetof(UTooltip_DisplayAttribute_C, Stylesheet) == 0x000448, "Member 'UTooltip_DisplayAttribute_C::Stylesheet' has a wrong offset!");

}

