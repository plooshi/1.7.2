#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MtxOffersList_2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MtxOffersList_2.MtxOffersList_2_C
// 0x0060 (0x0298 - 0x0238)
class UMtxOffersList_2_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(Transient, DuplicateTransient)
	class UMtxOffer_2_C*                          MtxOffer_2;                                        // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NoOffers_Overlay;                                  // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         OffersList;                                        // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      Throbber;                                          // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   PurchaseComplete;                                  // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         CountUpdateRate;                                   // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CountTimer;                                        // 0x0278(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         CurrentMtxAmount_Float;                            // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetMtxAmount_Float;                             // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisplayedMtxAmount_Float;                          // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MtxLerpRate_Float;                                 // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VBucksCountSound;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MtxOffersList_2(int32 EntryPoint);
	void CustomEvent_0_Copy();
	void CustomEvent_0();
	void OnPurchaseComplete(bool bSuccess);
	void OnBuyItem(const class FString& OfferId);
	void OnPackagesListed(const TArray<struct FMtxPackage>& Offers);
	void Construct();
	void PlayMtxOfferAnimation_MouseEnter();
	void PlayMtxOfferAnimation_MouseLeave();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MtxOffersList_2_C">();
	}
	static class UMtxOffersList_2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMtxOffersList_2_C>();
	}
};
static_assert(alignof(UMtxOffersList_2_C) == 0x000008, "Wrong alignment on UMtxOffersList_2_C");
static_assert(sizeof(UMtxOffersList_2_C) == 0x000298, "Wrong size on UMtxOffersList_2_C");
static_assert(offsetof(UMtxOffersList_2_C, UberGraphFrame) == 0x000238, "Member 'UMtxOffersList_2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, MtxOffer_2) == 0x000240, "Member 'UMtxOffersList_2_C::MtxOffer_2' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, NoOffers_Overlay) == 0x000248, "Member 'UMtxOffersList_2_C::NoOffers_Overlay' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, OffersList) == 0x000250, "Member 'UMtxOffersList_2_C::OffersList' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, Throbber) == 0x000258, "Member 'UMtxOffersList_2_C::Throbber' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, PurchaseComplete) == 0x000260, "Member 'UMtxOffersList_2_C::PurchaseComplete' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, CountUpdateRate) == 0x000270, "Member 'UMtxOffersList_2_C::CountUpdateRate' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, CountTimer) == 0x000278, "Member 'UMtxOffersList_2_C::CountTimer' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, CurrentMtxAmount_Float) == 0x000280, "Member 'UMtxOffersList_2_C::CurrentMtxAmount_Float' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, TargetMtxAmount_Float) == 0x000284, "Member 'UMtxOffersList_2_C::TargetMtxAmount_Float' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, DisplayedMtxAmount_Float) == 0x000288, "Member 'UMtxOffersList_2_C::DisplayedMtxAmount_Float' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, MtxLerpRate_Float) == 0x00028C, "Member 'UMtxOffersList_2_C::MtxLerpRate_Float' has a wrong offset!");
static_assert(offsetof(UMtxOffersList_2_C, VBucksCountSound) == 0x000290, "Member 'UMtxOffersList_2_C::VBucksCountSound' has a wrong offset!");

}

