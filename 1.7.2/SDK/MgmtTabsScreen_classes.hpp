#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MgmtTabsScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MgmtTabsScreen.MgmtTabsScreen_C
// 0x0028 (0x0408 - 0x03E0)
class UMgmtTabsScreen_C final : public UCommonActivatablePanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       PlayerHitThrob;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_6;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  TopTabContentWidgetSwitcher;                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalTabList_C*                   TopTabList;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MgmtTabsScreen(int32 EntryPoint);
	void HandleShowObjectives(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState);
	void HandleShowQuests(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState);
	void Destruct();
	void Construct();
	void BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton);
	void OnActivated();
	void HandleCursorModeChanged(bool IsEnabled, class FName ActionName, class UUserWidget* CursorModeContentCustomWidget);
	void HandleDamageReceived();
	void HandleMgmtMenuTabChangeRequested(class FName TabName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MgmtTabsScreen_C">();
	}
	static class UMgmtTabsScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMgmtTabsScreen_C>();
	}
};
static_assert(alignof(UMgmtTabsScreen_C) == 0x000008, "Wrong alignment on UMgmtTabsScreen_C");
static_assert(sizeof(UMgmtTabsScreen_C) == 0x000408, "Wrong size on UMgmtTabsScreen_C");
static_assert(offsetof(UMgmtTabsScreen_C, UberGraphFrame) == 0x0003E0, "Member 'UMgmtTabsScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMgmtTabsScreen_C, PlayerHitThrob) == 0x0003E8, "Member 'UMgmtTabsScreen_C::PlayerHitThrob' has a wrong offset!");
static_assert(offsetof(UMgmtTabsScreen_C, SafeZone_6) == 0x0003F0, "Member 'UMgmtTabsScreen_C::SafeZone_6' has a wrong offset!");
static_assert(offsetof(UMgmtTabsScreen_C, TopTabContentWidgetSwitcher) == 0x0003F8, "Member 'UMgmtTabsScreen_C::TopTabContentWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UMgmtTabsScreen_C, TopTabList) == 0x000400, "Member 'UMgmtTabsScreen_C::TopTabList' has a wrong offset!");

}

