#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemTooltipContent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "ItemTooltip_DisplayMode_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemTooltipContent.ItemTooltipContent_C
// 0x02B0 (0x04E0 - 0x0230)
class UItemTooltipContent_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       _Anim__Intro;                                      // 0x0238(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderSecondaryType_B;                             // 0x0240(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderSecondaryTypeFrame_A;                        // 0x0248(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderTertiaryType_B;                              // 0x0250(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderTertiaryTypeFrame_A;                         // 0x0258(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxRarity_Primary_A;                     // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxRarity_Primary_B;                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxSecondaryType_A;                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxSecondaryType_B;                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTertiaryType_A;                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTertiaryType_B;                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTier_A;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTier_B;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageDiv_Top_A;                                    // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageDiv_Top_B;                                    // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageSecondaryType_A;                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageSecondaryType_B;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTertiaryType_A;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTertiaryType_B;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_TierStar_C*                       Item_TierStar;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacyRatingWidget_C*                  RatingWidget_A;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacyRatingWidget_C*                  RatingWidget_B;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxPanel_B;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxTier_A;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxTier_B;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxTooltip_A;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemStackCounter_C*                    StackCounter_A;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemStackCounter_C*                    StackCounter_B;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextItemName_A;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextItemName_B;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextPrimaryType_A;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextPrimaryType_B;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRarityName_A;                                  // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRarityName_B;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextSecondaryType_A;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextSecondaryType_B;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextTertiaryType_A;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextTertiaryType_B;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTooltip_DescriptionText_C*             Tooltip_DescriptionText_1;                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTooltip_DescriptionText_C*             Tooltip_DescriptionText_2;                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxContent_A;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxContent_B;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxDescription_A;                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxDescription_B;                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxDPS_A;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxDPS_B;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxDurability_A;                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxDurability_B;                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxHeroBonuses_A;                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxHeroBonuses_B;                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxIngredients_A;                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxIngredients_B;                          // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxLevel_A;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxLevel_B;                                // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxPerks_A;                                // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxPerks_B;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxStats_A;                                // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxStats_B;                                // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItem*                              Item;                                              // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFortItem*                              ComparisonItem;                                    // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FFortRarityItemData                    Rarity_Data;                                       // 0x0420(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HoverEnabled;                                      // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PanelMode;                                         // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTooltip_DisplayMode                      DisplayMode;                                       // 0x04A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4A3[0x5];                                      // 0x04A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label_Level;                                       // 0x04A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Label_MaxLevel;                                    // 0x04C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShowOnlyBasicInfo;                                 // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideQuantity;                                  // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemTooltipContent(int32 EntryPoint);
	void Construct();
	void Update(bool* Success);
	void Set_Item_Data(class UFortItem* Item_0, class UFortItem* Comparison_Item, EItemTooltip_DisplayMode DisplayMode_0, int32 OverrideQuantity_0);
	void Build_Basic_Info();
	void Build_Weapon_DPS_Stat();
	void Build_Worker_Stats();
	void Build_Alteration_Info();
	void Build_Durability();
	void Intro();
	void Build_Basic_Stat_Block();
	void Set_Display_Name_Text();
	void Set_Primary_Category_Text();
	void Set_Secondary_Category_Icon___Text();
	void Set_Tertiary_Category_Icon___Text();
	void Set_Tier();
	void Set_Level_Text();
	void Set_Display_Mode(EItemTooltip_DisplayMode DisplayMode_0);
	void Set_Rarity_Data();
	void Build_Schematic_Ingredients();
	void Get_Query_Tag(struct FGameplayTag* Tag);
	void Init_Tooltip_Context(class UFortTooltipContext** Tooltip_Context);
	void Build_Ingredients();
	void BuildHeroBonuses();
	bool IsComparison();
	void Build_Perks_List();
	void Create_Custom_Integer_Stat(EFortStatValueDisplayType Display_Type, const class FText& Label, int32 Value, int32 Comparison_Value, bool HigherIsBetter, struct FFortDisplayAttribute* Display_Attribute);
	void SetDescriptionText();
	void Set_Quantity();
	void Set_Rating();
	void ClearExtendedInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemTooltipContent_C">();
	}
	static class UItemTooltipContent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemTooltipContent_C>();
	}
};
static_assert(alignof(UItemTooltipContent_C) == 0x000008, "Wrong alignment on UItemTooltipContent_C");
static_assert(sizeof(UItemTooltipContent_C) == 0x0004E0, "Wrong size on UItemTooltipContent_C");
static_assert(offsetof(UItemTooltipContent_C, UberGraphFrame) == 0x000230, "Member 'UItemTooltipContent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, _Anim__Intro) == 0x000238, "Member 'UItemTooltipContent_C::_Anim__Intro' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, BorderSecondaryType_B) == 0x000240, "Member 'UItemTooltipContent_C::BorderSecondaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, BorderSecondaryTypeFrame_A) == 0x000248, "Member 'UItemTooltipContent_C::BorderSecondaryTypeFrame_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, BorderTertiaryType_B) == 0x000250, "Member 'UItemTooltipContent_C::BorderTertiaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, BorderTertiaryTypeFrame_A) == 0x000258, "Member 'UItemTooltipContent_C::BorderTertiaryTypeFrame_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxRarity_Primary_A) == 0x000260, "Member 'UItemTooltipContent_C::HorizontalBoxRarity_Primary_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxRarity_Primary_B) == 0x000268, "Member 'UItemTooltipContent_C::HorizontalBoxRarity_Primary_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxSecondaryType_A) == 0x000270, "Member 'UItemTooltipContent_C::HorizontalBoxSecondaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxSecondaryType_B) == 0x000278, "Member 'UItemTooltipContent_C::HorizontalBoxSecondaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxTertiaryType_A) == 0x000280, "Member 'UItemTooltipContent_C::HorizontalBoxTertiaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxTertiaryType_B) == 0x000288, "Member 'UItemTooltipContent_C::HorizontalBoxTertiaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxTier_A) == 0x000290, "Member 'UItemTooltipContent_C::HorizontalBoxTier_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HorizontalBoxTier_B) == 0x000298, "Member 'UItemTooltipContent_C::HorizontalBoxTier_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ImageDiv_Top_A) == 0x0002A0, "Member 'UItemTooltipContent_C::ImageDiv_Top_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ImageDiv_Top_B) == 0x0002A8, "Member 'UItemTooltipContent_C::ImageDiv_Top_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ImageSecondaryType_A) == 0x0002B0, "Member 'UItemTooltipContent_C::ImageSecondaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ImageSecondaryType_B) == 0x0002B8, "Member 'UItemTooltipContent_C::ImageSecondaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ImageTertiaryType_A) == 0x0002C0, "Member 'UItemTooltipContent_C::ImageTertiaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ImageTertiaryType_B) == 0x0002C8, "Member 'UItemTooltipContent_C::ImageTertiaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Item_TierStar) == 0x0002D0, "Member 'UItemTooltipContent_C::Item_TierStar' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, RatingWidget_A) == 0x0002D8, "Member 'UItemTooltipContent_C::RatingWidget_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, RatingWidget_B) == 0x0002E0, "Member 'UItemTooltipContent_C::RatingWidget_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, SizeBoxPanel_B) == 0x0002E8, "Member 'UItemTooltipContent_C::SizeBoxPanel_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, SizeBoxTier_A) == 0x0002F0, "Member 'UItemTooltipContent_C::SizeBoxTier_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, SizeBoxTier_B) == 0x0002F8, "Member 'UItemTooltipContent_C::SizeBoxTier_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, SizeBoxTooltip_A) == 0x000300, "Member 'UItemTooltipContent_C::SizeBoxTooltip_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, StackCounter_A) == 0x000308, "Member 'UItemTooltipContent_C::StackCounter_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, StackCounter_B) == 0x000310, "Member 'UItemTooltipContent_C::StackCounter_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Switcher) == 0x000318, "Member 'UItemTooltipContent_C::Switcher' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextItemName_A) == 0x000320, "Member 'UItemTooltipContent_C::TextItemName_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextItemName_B) == 0x000328, "Member 'UItemTooltipContent_C::TextItemName_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextPrimaryType_A) == 0x000330, "Member 'UItemTooltipContent_C::TextPrimaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextPrimaryType_B) == 0x000338, "Member 'UItemTooltipContent_C::TextPrimaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextRarityName_A) == 0x000340, "Member 'UItemTooltipContent_C::TextRarityName_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextRarityName_B) == 0x000348, "Member 'UItemTooltipContent_C::TextRarityName_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextSecondaryType_A) == 0x000350, "Member 'UItemTooltipContent_C::TextSecondaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextSecondaryType_B) == 0x000358, "Member 'UItemTooltipContent_C::TextSecondaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextTertiaryType_A) == 0x000360, "Member 'UItemTooltipContent_C::TextTertiaryType_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, TextTertiaryType_B) == 0x000368, "Member 'UItemTooltipContent_C::TextTertiaryType_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Tooltip_DescriptionText_1) == 0x000370, "Member 'UItemTooltipContent_C::Tooltip_DescriptionText_1' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Tooltip_DescriptionText_2) == 0x000378, "Member 'UItemTooltipContent_C::Tooltip_DescriptionText_2' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxContent_A) == 0x000380, "Member 'UItemTooltipContent_C::VerticalBoxContent_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxContent_B) == 0x000388, "Member 'UItemTooltipContent_C::VerticalBoxContent_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxDescription_A) == 0x000390, "Member 'UItemTooltipContent_C::VerticalBoxDescription_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxDescription_B) == 0x000398, "Member 'UItemTooltipContent_C::VerticalBoxDescription_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxDPS_A) == 0x0003A0, "Member 'UItemTooltipContent_C::VerticalBoxDPS_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxDPS_B) == 0x0003A8, "Member 'UItemTooltipContent_C::VerticalBoxDPS_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxDurability_A) == 0x0003B0, "Member 'UItemTooltipContent_C::VerticalBoxDurability_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxDurability_B) == 0x0003B8, "Member 'UItemTooltipContent_C::VerticalBoxDurability_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxHeroBonuses_A) == 0x0003C0, "Member 'UItemTooltipContent_C::VerticalBoxHeroBonuses_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxHeroBonuses_B) == 0x0003C8, "Member 'UItemTooltipContent_C::VerticalBoxHeroBonuses_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxIngredients_A) == 0x0003D0, "Member 'UItemTooltipContent_C::VerticalBoxIngredients_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxIngredients_B) == 0x0003D8, "Member 'UItemTooltipContent_C::VerticalBoxIngredients_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxLevel_A) == 0x0003E0, "Member 'UItemTooltipContent_C::VerticalBoxLevel_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxLevel_B) == 0x0003E8, "Member 'UItemTooltipContent_C::VerticalBoxLevel_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxPerks_A) == 0x0003F0, "Member 'UItemTooltipContent_C::VerticalBoxPerks_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxPerks_B) == 0x0003F8, "Member 'UItemTooltipContent_C::VerticalBoxPerks_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxStats_A) == 0x000400, "Member 'UItemTooltipContent_C::VerticalBoxStats_A' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, VerticalBoxStats_B) == 0x000408, "Member 'UItemTooltipContent_C::VerticalBoxStats_B' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Item) == 0x000410, "Member 'UItemTooltipContent_C::Item' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ComparisonItem) == 0x000418, "Member 'UItemTooltipContent_C::ComparisonItem' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Rarity_Data) == 0x000420, "Member 'UItemTooltipContent_C::Rarity_Data' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, HoverEnabled) == 0x0004A0, "Member 'UItemTooltipContent_C::HoverEnabled' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, PanelMode) == 0x0004A1, "Member 'UItemTooltipContent_C::PanelMode' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, DisplayMode) == 0x0004A2, "Member 'UItemTooltipContent_C::DisplayMode' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Label_Level) == 0x0004A8, "Member 'UItemTooltipContent_C::Label_Level' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, Label_MaxLevel) == 0x0004C0, "Member 'UItemTooltipContent_C::Label_MaxLevel' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, ShowOnlyBasicInfo) == 0x0004D8, "Member 'UItemTooltipContent_C::ShowOnlyBasicInfo' has a wrong offset!");
static_assert(offsetof(UItemTooltipContent_C, OverrideQuantity) == 0x0004DC, "Member 'UItemTooltipContent_C::OverrideQuantity' has a wrong offset!");

}

