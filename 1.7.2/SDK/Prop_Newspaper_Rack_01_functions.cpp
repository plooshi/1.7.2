#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_Newspaper_Rack_01

#include "Basic.hpp"

#include "Prop_Newspaper_Rack_01_classes.hpp"
#include "Prop_Newspaper_Rack_01_parameters.hpp"


namespace SDK
{

// Function Prop_Newspaper_Rack_01.Prop_Newspaper_Rack_01_C.ExecuteUbergraph_Prop_Newspaper_Rack_01
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_Newspaper_Rack_01_C::ExecuteUbergraph_Prop_Newspaper_Rack_01(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Newspaper_Rack_01_C", "ExecuteUbergraph_Prop_Newspaper_Rack_01");

	Params::Prop_Newspaper_Rack_01_C_ExecuteUbergraph_Prop_Newspaper_Rack_01 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prop_Newspaper_Rack_01.Prop_Newspaper_Rack_01_C.OnLootRepeat
// (Event, Public, BlueprintEvent)

void AProp_Newspaper_Rack_01_C::OnLootRepeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Newspaper_Rack_01_C", "OnLootRepeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Prop_Newspaper_Rack_01.Prop_Newspaper_Rack_01_C.OnBeginSearch
// (Event, Public, BlueprintEvent)

void AProp_Newspaper_Rack_01_C::OnBeginSearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Newspaper_Rack_01_C", "OnBeginSearch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Prop_Newspaper_Rack_01.Prop_Newspaper_Rack_01_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AProp_Newspaper_Rack_01_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Newspaper_Rack_01_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

