#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemManagementInventoryPanel

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.ExecuteUbergraph_ItemManagementInventoryPanel
// 0x0198 (0x0198 - 0x0000)
struct ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemManagementMode                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortFrontendInventoryFilter                  Temp_byte_Variable2;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable7;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable8;                               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable9;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable10;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable11;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable13;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable14;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable15;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable16;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable17;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCriterionDisplayNameOfSortType_ReturnValue; // 0x0020(0x0018)()
	class FText                                   CallFunc_GetQualifiedFilterDisplayName_ReturnValue; // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button2;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	class UCommonBorder*                          K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSelected;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSchematicItem*                     K2Node_DynamicCast_AsFort_Schematic_Item;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItemDefinition*>            CallFunc_GetUpgradeItemDefinitionsForCurrentInventory_ReturnValue; // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortItemDefinition*                    CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemCount_C*                           CallFunc_Create_ReturnValue;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_Event_QuickBarType;                         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemToDetail_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	class UFortItem*                              K2Node_Event_Item;                                 // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCursorModeEnabled;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ActionName;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Event_CursorModeContentWidget;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel");
static_assert(sizeof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel) == 0x000198, "Wrong size on ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, EntryPoint) == 0x000000, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable) == 0x000004, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable2) == 0x000005, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable3) == 0x000006, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable4) == 0x000007, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable5) == 0x000008, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable6) == 0x000009, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable7) == 0x00000A, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable8) == 0x00000B, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable9) == 0x00000C, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable10) == 0x00000D, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable11) == 0x00000E, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable12) == 0x00000F, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable13) == 0x000010, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable13' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable14) == 0x000011, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable14' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable15) == 0x000012, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable15' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable16) == 0x000013, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable16' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_byte_Variable17) == 0x000014, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_byte_Variable17' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetCriterionDisplayNameOfSortType_ReturnValue) == 0x000020, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetCriterionDisplayNameOfSortType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetQualifiedFilterDisplayName_ReturnValue) == 0x000038, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetQualifiedFilterDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_MakeArray_Array) == 0x000090, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_ComponentBoundEvent_Button2) == 0x0000A0, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_ComponentBoundEvent_Button2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Select_Default) == 0x0000C0, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetContext_ReturnValue) == 0x0000C8, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_ComponentBoundEvent_Item) == 0x0000D8, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_ComponentBoundEvent_bIsSelected) == 0x0000E0, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_ComponentBoundEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_DynamicCast_AsFort_Schematic_Item) == 0x0000E8, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_DynamicCast_AsFort_Schematic_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetUpgradeItemDefinitionsForCurrentInventory_ReturnValue) == 0x000100, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetUpgradeItemDefinitionsForCurrentInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_Array_Get_Item) == 0x000110, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetOwningPlayer_ReturnValue) == 0x000120, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_Create_ReturnValue) == 0x000128, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000130, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Event_QuickBarType) == 0x000138, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Event_QuickBarType' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000139, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetItemToDetail_ReturnValue) == 0x000140, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetItemToDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_CreateDelegate_OutputDelegate) == 0x000148, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Event_Item) == 0x000158, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Select2_Default) == 0x000160, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_ComponentBoundEvent_Button) == 0x000168, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Event_bCursorModeEnabled) == 0x000170, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Event_bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Event_ActionName) == 0x000178, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Event_ActionName' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, K2Node_Event_CursorModeContentWidget) == 0x000180, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::K2Node_Event_CursorModeContentWidget' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_GetContext_ReturnValue2) == 0x000188, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000190, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_IsInZone_ReturnValue) == 0x000191, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel, CallFunc_BooleanAND_ReturnValue) == 0x000192, "Member 'ItemManagementInventoryPanel_C_ExecuteUbergraph_ItemManagementInventoryPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.HandleCursorModeChangedBP
// 0x0018 (0x0018 - 0x0000)
struct ItemManagementInventoryPanel_C_HandleCursorModeChangedBP final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_HandleCursorModeChangedBP) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_HandleCursorModeChangedBP");
static_assert(sizeof(ItemManagementInventoryPanel_C_HandleCursorModeChangedBP) == 0x000018, "Wrong size on ItemManagementInventoryPanel_C_HandleCursorModeChangedBP");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleCursorModeChangedBP, bCursorModeEnabled) == 0x000000, "Member 'ItemManagementInventoryPanel_C_HandleCursorModeChangedBP::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleCursorModeChangedBP, ActionName) == 0x000008, "Member 'ItemManagementInventoryPanel_C_HandleCursorModeChangedBP::ActionName' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleCursorModeChangedBP, CursorModeContentWidget) == 0x000010, "Member 'ItemManagementInventoryPanel_C_HandleCursorModeChangedBP::CursorModeContentWidget' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'ItemManagementInventoryPanel_C_BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.HandleMulchQuantitySelection
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementInventoryPanel_C_HandleMulchQuantitySelection final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_HandleMulchQuantitySelection) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_HandleMulchQuantitySelection");
static_assert(sizeof(ItemManagementInventoryPanel_C_HandleMulchQuantitySelection) == 0x000008, "Wrong size on ItemManagementInventoryPanel_C_HandleMulchQuantitySelection");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleMulchQuantitySelection, Item) == 0x000000, "Member 'ItemManagementInventoryPanel_C_HandleMulchQuantitySelection::Item' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.HandleQuickBarChangedBP
// 0x0001 (0x0001 - 0x0000)
struct ItemManagementInventoryPanel_C_HandleQuickBarChangedBP final
{
public:
	EFortQuickBars                                QuickBarType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_HandleQuickBarChangedBP) == 0x000001, "Wrong alignment on ItemManagementInventoryPanel_C_HandleQuickBarChangedBP");
static_assert(sizeof(ItemManagementInventoryPanel_C_HandleQuickBarChangedBP) == 0x000001, "Wrong size on ItemManagementInventoryPanel_C_HandleQuickBarChangedBP");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleQuickBarChangedBP, QuickBarType) == 0x000000, "Member 'ItemManagementInventoryPanel_C_HandleQuickBarChangedBP::QuickBarType' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature");
static_assert(sizeof(ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature) == 0x000010, "Wrong size on ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature");
static_assert(offsetof(ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature, Item) == 0x000000, "Member 'ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature, bIsSelected) == 0x000008, "Member 'ItemManagementInventoryPanel_C_BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature::bIsSelected' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'ItemManagementInventoryPanel_C_BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.SetUniqueFeatures
// 0x0005 (0x0005 - 0x0000)
struct ItemManagementInventoryPanel_C_SetUniqueFeatures final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_SetUniqueFeatures) == 0x000001, "Wrong alignment on ItemManagementInventoryPanel_C_SetUniqueFeatures");
static_assert(sizeof(ItemManagementInventoryPanel_C_SetUniqueFeatures) == 0x000005, "Wrong size on ItemManagementInventoryPanel_C_SetUniqueFeatures");
static_assert(offsetof(ItemManagementInventoryPanel_C_SetUniqueFeatures, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ItemManagementInventoryPanel_C_SetUniqueFeatures::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SetUniqueFeatures, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000001, "Member 'ItemManagementInventoryPanel_C_SetUniqueFeatures::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SetUniqueFeatures, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'ItemManagementInventoryPanel_C_SetUniqueFeatures::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SetUniqueFeatures, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000003, "Member 'ItemManagementInventoryPanel_C_SetUniqueFeatures::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SetUniqueFeatures, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'ItemManagementInventoryPanel_C_SetUniqueFeatures::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.UpdateRecycleInfo
// 0x00E0 (0x00E0 - 0x0000)
struct ItemManagementInventoryPanel_C_UpdateRecycleInfo final
{
public:
	int32                                         CallFunc_GetNumItemsToMulch_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0058(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x00C0(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_UpdateRecycleInfo) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_UpdateRecycleInfo");
static_assert(sizeof(ItemManagementInventoryPanel_C_UpdateRecycleInfo) == 0x0000E0, "Wrong size on ItemManagementInventoryPanel_C_UpdateRecycleInfo");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, CallFunc_GetNumItemsToMulch_ReturnValue) == 0x000000, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::CallFunc_GetNumItemsToMulch_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, K2Node_MakeArray_Array) == 0x000048, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, K2Node_MakeStruct_FormatArgumentData2) == 0x000058, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, CallFunc_Format_ReturnValue) == 0x000098, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, K2Node_MakeArray_Array2) == 0x0000B0, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, CallFunc_Format_ReturnValue2) == 0x0000C0, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateRecycleInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000D8, "Member 'ItemManagementInventoryPanel_C_UpdateRecycleInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.UpdateEquipSlotsVisibility
// 0x0020 (0x0020 - 0x0000)
struct ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility final
{
public:
	class UItemManagementScreen_C*                K2Node_DynamicCast_AsItem_Management_Screen;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemManagementScreen_C*                K2Node_DynamicCast_AsItem_Management_Screen2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility");
static_assert(sizeof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility) == 0x000020, "Wrong size on ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, K2Node_DynamicCast_AsItem_Management_Screen) == 0x000000, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::K2Node_DynamicCast_AsItem_Management_Screen' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, K2Node_DynamicCast_AsItem_Management_Screen2) == 0x000010, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::K2Node_DynamicCast_AsItem_Management_Screen2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, K2Node_DynamicCast_bSuccess2) == 0x000018, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, K2Node_SwitchName_CmpSuccess) == 0x00001A, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00001C, "Member 'ItemManagementInventoryPanel_C_UpdateEquipSlotsVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.ProcessSlotAction
// 0x0058 (0x0058 - 0x0000)
struct ItemManagementInventoryPanel_C_ProcessSlotAction final
{
public:
	int32                                         SelectedSlot;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemManagementScreen_C*                K2Node_DynamicCast_AsItem_Management_Screen;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemToDetail_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue2;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropItemOnQuickBar_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSchematicItem*                     K2Node_DynamicCast_AsFort_Schematic_Item;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortCraftFailCause                           CallFunc_CraftAndSlotSchematic_FailCause;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CraftAndSlotSchematic_ReturnValue;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedEquipSlot_Slot;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_ProcessSlotAction) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_ProcessSlotAction");
static_assert(sizeof(ItemManagementInventoryPanel_C_ProcessSlotAction) == 0x000058, "Wrong size on ItemManagementInventoryPanel_C_ProcessSlotAction");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, SelectedSlot) == 0x000000, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::SelectedSlot' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, K2Node_DynamicCast_AsItem_Management_Screen) == 0x000008, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::K2Node_DynamicCast_AsItem_Management_Screen' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_GetItemToDetail_ReturnValue) == 0x000028, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_GetItemToDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_GetContext_ReturnValue2) == 0x000030, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_DropItemOnQuickBar_ReturnValue) == 0x000038, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_DropItemOnQuickBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, K2Node_DynamicCast_AsFort_Schematic_Item) == 0x000040, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::K2Node_DynamicCast_AsFort_Schematic_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_CraftAndSlotSchematic_FailCause) == 0x000049, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_CraftAndSlotSchematic_FailCause' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_CraftAndSlotSchematic_ReturnValue) == 0x00004A, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_CraftAndSlotSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_GetSelectedEquipSlot_Slot) == 0x00004C, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_GetSelectedEquipSlot_Slot' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_ProcessSlotAction, CallFunc_GetUINavigationManager_ReturnValue) == 0x000050, "Member 'ItemManagementInventoryPanel_C_ProcessSlotAction::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.GetSelectedEquipSlot
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementInventoryPanel_C_GetSelectedEquipSlot final
{
public:
	int32                                         Slot_0;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_Selected;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelected_Selected2;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelected_Selected3;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_GetSelectedEquipSlot) == 0x000004, "Wrong alignment on ItemManagementInventoryPanel_C_GetSelectedEquipSlot");
static_assert(sizeof(ItemManagementInventoryPanel_C_GetSelectedEquipSlot) == 0x000008, "Wrong size on ItemManagementInventoryPanel_C_GetSelectedEquipSlot");
static_assert(offsetof(ItemManagementInventoryPanel_C_GetSelectedEquipSlot, Slot_0) == 0x000000, "Member 'ItemManagementInventoryPanel_C_GetSelectedEquipSlot::Slot_0' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_GetSelectedEquipSlot, CallFunc_IsSelected_Selected) == 0x000004, "Member 'ItemManagementInventoryPanel_C_GetSelectedEquipSlot::CallFunc_IsSelected_Selected' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_GetSelectedEquipSlot, CallFunc_IsSelected_Selected2) == 0x000005, "Member 'ItemManagementInventoryPanel_C_GetSelectedEquipSlot::CallFunc_IsSelected_Selected2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_GetSelectedEquipSlot, CallFunc_IsSelected_Selected3) == 0x000006, "Member 'ItemManagementInventoryPanel_C_GetSelectedEquipSlot::CallFunc_IsSelected_Selected3' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.CreateMulchQuantitySelector
// 0x0038 (0x0038 - 0x0000)
struct ItemManagementInventoryPanel_C_CreateMulchQuantitySelector final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ChosenValue, class UFortItem* FortItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuantitySelector_C*                    CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_CreateMulchQuantitySelector");
static_assert(sizeof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector) == 0x000038, "Wrong size on ItemManagementInventoryPanel_C_CreateMulchQuantitySelector");
static_assert(offsetof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector, Item) == 0x000000, "Member 'ItemManagementInventoryPanel_C_CreateMulchQuantitySelector::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector, CallFunc_GetNumInStack_ReturnValue) == 0x000008, "Member 'ItemManagementInventoryPanel_C_CreateMulchQuantitySelector::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ItemManagementInventoryPanel_C_CreateMulchQuantitySelector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000020, "Member 'ItemManagementInventoryPanel_C_CreateMulchQuantitySelector::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'ItemManagementInventoryPanel_C_CreateMulchQuantitySelector::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_CreateMulchQuantitySelector, CallFunc_Create_ReturnValue) == 0x000030, "Member 'ItemManagementInventoryPanel_C_CreateMulchQuantitySelector::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.DestroyMulchQuantitySelector
// 0x0001 (0x0001 - 0x0000)
struct ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector) == 0x000001, "Wrong alignment on ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector");
static_assert(sizeof(ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector) == 0x000001, "Wrong size on ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector");
static_assert(offsetof(ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ItemManagementInventoryPanel_C_DestroyMulchQuantitySelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.HandleMulchQuantityCallback
// 0x0018 (0x0018 - 0x0000)
struct ItemManagementInventoryPanel_C_HandleMulchQuantityCallback final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_HandleMulchQuantityCallback) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_HandleMulchQuantityCallback");
static_assert(sizeof(ItemManagementInventoryPanel_C_HandleMulchQuantityCallback) == 0x000018, "Wrong size on ItemManagementInventoryPanel_C_HandleMulchQuantityCallback");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleMulchQuantityCallback, Quantity) == 0x000000, "Member 'ItemManagementInventoryPanel_C_HandleMulchQuantityCallback::Quantity' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleMulchQuantityCallback, Item) == 0x000008, "Member 'ItemManagementInventoryPanel_C_HandleMulchQuantityCallback::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_HandleMulchQuantityCallback, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'ItemManagementInventoryPanel_C_HandleMulchQuantityCallback::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.SelectTrapByTag
// 0x0058 (0x0058 - 0x0000)
struct ItemManagementInventoryPanel_C_SelectTrapByTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetSelectedItem_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSelectedIndex_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetItemAt_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_DynamicCast_AsFort_Item;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_SelectTrapByTag) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_SelectTrapByTag");
static_assert(sizeof(ItemManagementInventoryPanel_C_SelectTrapByTag) == 0x000058, "Wrong size on ItemManagementInventoryPanel_C_SelectTrapByTag");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, Tag) == 0x000000, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::Tag' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, Success) == 0x000008, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::Success' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, Temp_bool_Variable) == 0x000009, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, Temp_int_Variable) == 0x00000C, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_GetSelectedItem_ReturnValue) == 0x000018, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_SetSelectedIndex_ReturnValue) == 0x000020, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_SetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_GetItemAt_ReturnValue) == 0x000028, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_GetNumItems_ReturnValue) == 0x000030, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, K2Node_DynamicCast_AsFort_Item) == 0x000038, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::K2Node_DynamicCast_AsFort_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000048, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByTag, CallFunc_HasTag_ReturnValue) == 0x000052, "Member 'ItemManagementInventoryPanel_C_SelectTrapByTag::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.SelectTrapByItem
// 0x0040 (0x0040 - 0x0000)
struct ItemManagementInventoryPanel_C_SelectTrapByItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetSelectedItem_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSelectedIndex_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetItemAt_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementInventoryPanel_C_SelectTrapByItem) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_SelectTrapByItem");
static_assert(sizeof(ItemManagementInventoryPanel_C_SelectTrapByItem) == 0x000040, "Wrong size on ItemManagementInventoryPanel_C_SelectTrapByItem");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, Item) == 0x000000, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, Success) == 0x000008, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::Success' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, Temp_bool_Variable) == 0x000009, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, Temp_int_Variable) == 0x00000C, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_GetSelectedItem_ReturnValue) == 0x000018, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_SetSelectedIndex_ReturnValue) == 0x000020, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_SetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_GetItemAt_ReturnValue) == 0x000028, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_GetNumItems_ReturnValue) == 0x000030, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000034, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_SelectTrapByItem, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'ItemManagementInventoryPanel_C_SelectTrapByItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemManagementInventoryPanel.ItemManagementInventoryPanel_C.PrepOpeningInventory
// 0x0060 (0x0060 - 0x0000)
struct ItemManagementInventoryPanel_C_PrepOpeningInventory final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TrapsTag;                                          // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetSelectedItem_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSelectedIndex_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetSelectedItem_ReturnValue2;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSelectedIndex_ReturnValue2;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetQuickBarSlottedItem_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectTrapByItem_Success;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectTrapByTag_Success;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemToDetail_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementInventoryPanel_C_PrepOpeningInventory) == 0x000008, "Wrong alignment on ItemManagementInventoryPanel_C_PrepOpeningInventory");
static_assert(sizeof(ItemManagementInventoryPanel_C_PrepOpeningInventory) == 0x000060, "Wrong size on ItemManagementInventoryPanel_C_PrepOpeningInventory");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, ActionName) == 0x000000, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::ActionName' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, TrapsTag) == 0x000008, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::TrapsTag' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, K2Node_SwitchName_CmpSuccess) == 0x000010, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_GetSelectedItem_ReturnValue) == 0x000018, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_SetSelectedIndex_ReturnValue) == 0x000020, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_SetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_GetSelectedItem_ReturnValue2) == 0x000028, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_GetSelectedItem_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_SetSelectedIndex_ReturnValue2) == 0x000030, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_SetSelectedIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_GetUINavigationManager_ReturnValue) == 0x000038, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_GetContext_ReturnValue) == 0x000040, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_GetQuickBarSlottedItem_ReturnValue) == 0x000048, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_GetQuickBarSlottedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_SelectTrapByItem_Success) == 0x000051, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_SelectTrapByItem_Success' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_SelectTrapByTag_Success) == 0x000052, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_SelectTrapByTag_Success' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000053, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementInventoryPanel_C_PrepOpeningInventory, CallFunc_GetItemToDetail_ReturnValue) == 0x000058, "Member 'ItemManagementInventoryPanel_C_PrepOpeningInventory::CallFunc_GetItemToDetail_ReturnValue' has a wrong offset!");

}

