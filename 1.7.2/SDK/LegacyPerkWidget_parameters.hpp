#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LegacyPerkWidget

#include "Basic.hpp"

#include "TooltipStat_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function LegacyPerkWidget.LegacyPerkWidget_C.ExecuteUbergraph_LegacyPerkWidget
// 0x00B0 (0x00B0 - 0x0000)
struct LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAbility_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0008(0x0090)()
	bool                                          CallFunc_ShouldFadePerk_Result;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x009C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget");
static_assert(sizeof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget) == 0x0000B0, "Wrong size on LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget");
static_assert(offsetof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget, EntryPoint) == 0x000000, "Member 'LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget, CallFunc_HasAbility_ReturnValue) == 0x000004, "Member 'LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget::CallFunc_HasAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget, K2Node_MakeStruct_SlateBrush) == 0x000008, "Member 'LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget, CallFunc_ShouldFadePerk_Result) == 0x000098, "Member 'LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget::CallFunc_ShouldFadePerk_Result' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget, K2Node_MakeStruct_LinearColor) == 0x00009C, "Member 'LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget, K2Node_Event_IsDesignTime) == 0x0000AC, "Member 'LegacyPerkWidget_C_ExecuteUbergraph_LegacyPerkWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct LegacyPerkWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LegacyPerkWidget_C_PreConstruct) == 0x000001, "Wrong alignment on LegacyPerkWidget_C_PreConstruct");
static_assert(sizeof(LegacyPerkWidget_C_PreConstruct) == 0x000001, "Wrong size on LegacyPerkWidget_C_PreConstruct");
static_assert(offsetof(LegacyPerkWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'LegacyPerkWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.InitializeBasicPerk
// 0x0260 (0x0260 - 0x0000)
struct LegacyPerkWidget_C_InitializeBasicPerk final
{
public:
	struct FLinearColor                           CallFunc_GetHighlightColor_Color;                  // 0x0000(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_NoResourceBrush_ReturnValue;              // 0x0010(0x0090)()
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetIcon_Brush;                            // 0x00A8(0x0090)()
	bool                                          CallFunc_GetIcon_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0140(0x0090)()
	struct FSlateBrush                            CallFunc_ResizeBrush_NewParam;                     // 0x01D0(0x0090)()
};
static_assert(alignof(LegacyPerkWidget_C_InitializeBasicPerk) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_InitializeBasicPerk");
static_assert(sizeof(LegacyPerkWidget_C_InitializeBasicPerk) == 0x000260, "Wrong size on LegacyPerkWidget_C_InitializeBasicPerk");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, CallFunc_GetHighlightColor_Color) == 0x000000, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::CallFunc_GetHighlightColor_Color' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, CallFunc_NoResourceBrush_ReturnValue) == 0x000010, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::CallFunc_NoResourceBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, Temp_bool_Variable) == 0x0000A0, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, CallFunc_GetIcon_Brush) == 0x0000A8, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::CallFunc_GetIcon_Brush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, CallFunc_GetIcon_ReturnValue) == 0x000138, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, K2Node_Select_Default) == 0x000140, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeBasicPerk, CallFunc_ResizeBrush_NewParam) == 0x0001D0, "Member 'LegacyPerkWidget_C_InitializeBasicPerk::CallFunc_ResizeBrush_NewParam' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.InitializeAbilityPerk
// 0x0268 (0x0268 - 0x0000)
struct LegacyPerkWidget_C_InitializeAbilityPerk final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetHighlightColor_Color;                  // 0x0004(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0018(0x0090)()
	bool                                          CallFunc_IsPerkHighlighted_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetIcon_Brush;                            // 0x00B0(0x0090)()
	bool                                          CallFunc_GetIcon_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select2_Default;                            // 0x0148(0x0090)()
	struct FSlateBrush                            CallFunc_ResizeBrush_NewParam;                     // 0x01D8(0x0090)()
};
static_assert(alignof(LegacyPerkWidget_C_InitializeAbilityPerk) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_InitializeAbilityPerk");
static_assert(sizeof(LegacyPerkWidget_C_InitializeAbilityPerk) == 0x000268, "Wrong size on LegacyPerkWidget_C_InitializeAbilityPerk");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, Temp_bool_Variable) == 0x000000, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, Temp_byte_Variable) == 0x000001, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, Temp_byte_Variable2) == 0x000002, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, CallFunc_GetHighlightColor_Color) == 0x000004, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::CallFunc_GetHighlightColor_Color' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, K2Node_MakeStruct_SlateBrush) == 0x000018, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, CallFunc_IsPerkHighlighted_ReturnValue) == 0x0000A8, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::CallFunc_IsPerkHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, Temp_bool_Variable2) == 0x0000A9, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, K2Node_Select_Default) == 0x0000AA, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, CallFunc_GetIcon_Brush) == 0x0000B0, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::CallFunc_GetIcon_Brush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, CallFunc_GetIcon_ReturnValue) == 0x000140, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, K2Node_Select2_Default) == 0x000148, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeAbilityPerk, CallFunc_ResizeBrush_NewParam) == 0x0001D8, "Member 'LegacyPerkWidget_C_InitializeAbilityPerk::CallFunc_ResizeBrush_NewParam' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.GetTierAbilityBrush
// 0x0190 (0x0190 - 0x0000)
struct LegacyPerkWidget_C_GetTierAbilityBrush final
{
public:
	struct FSlateBrush                            SlateBrush;                                        // 0x0000(0x0090)(Parm, OutParm)
	EFortItemTier                                 Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable2;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable3;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable4;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable5;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable6;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable7;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable8;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable9;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable10;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable11;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemTier                                 CallFunc_GetPerkTier_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0100(0x0090)()
};
static_assert(alignof(LegacyPerkWidget_C_GetTierAbilityBrush) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_GetTierAbilityBrush");
static_assert(sizeof(LegacyPerkWidget_C_GetTierAbilityBrush) == 0x000190, "Wrong size on LegacyPerkWidget_C_GetTierAbilityBrush");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, SlateBrush) == 0x000000, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::SlateBrush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_byte_Variable) == 0x000090, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable) == 0x000098, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable2) == 0x0000A0, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable3) == 0x0000A8, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable4) == 0x0000B0, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable5) == 0x0000B8, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable6) == 0x0000C0, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable7) == 0x0000C8, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable8) == 0x0000D0, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable9) == 0x0000D8, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable9' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable10) == 0x0000E0, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable10' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, Temp_object_Variable11) == 0x0000E8, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::Temp_object_Variable11' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, CallFunc_GetPerkTier_ReturnValue) == 0x0000F0, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::CallFunc_GetPerkTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, K2Node_Select_Default) == 0x0000F8, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetTierAbilityBrush, K2Node_MakeStruct_SlateBrush) == 0x000100, "Member 'LegacyPerkWidget_C_GetTierAbilityBrush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.GetHighlightColor
// 0x0048 (0x0048 - 0x0000)
struct LegacyPerkWidget_C_GetHighlightColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Buff_Color_Color;                     // 0x0024(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPerkHighlighted_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LegacyPerkWidget_C_GetHighlightColor) == 0x000004, "Wrong alignment on LegacyPerkWidget_C_GetHighlightColor");
static_assert(sizeof(LegacyPerkWidget_C_GetHighlightColor) == 0x000048, "Wrong size on LegacyPerkWidget_C_GetHighlightColor");
static_assert(offsetof(LegacyPerkWidget_C_GetHighlightColor, Color) == 0x000000, "Member 'LegacyPerkWidget_C_GetHighlightColor::Color' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetHighlightColor, Temp_bool_Variable) == 0x000010, "Member 'LegacyPerkWidget_C_GetHighlightColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetHighlightColor, Temp_struct_Variable) == 0x000014, "Member 'LegacyPerkWidget_C_GetHighlightColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetHighlightColor, CallFunc_Get_Buff_Color_Color) == 0x000024, "Member 'LegacyPerkWidget_C_GetHighlightColor::CallFunc_Get_Buff_Color_Color' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetHighlightColor, CallFunc_IsPerkHighlighted_ReturnValue) == 0x000034, "Member 'LegacyPerkWidget_C_GetHighlightColor::CallFunc_IsPerkHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetHighlightColor, K2Node_Select_Default) == 0x000038, "Member 'LegacyPerkWidget_C_GetHighlightColor::K2Node_Select_Default' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.ShouldFadePerk
// 0x0006 (0x0006 - 0x0000)
struct LegacyPerkWidget_C_ShouldFadePerk final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPerkHighlighted_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPerkUnlocked_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LegacyPerkWidget_C_ShouldFadePerk) == 0x000001, "Wrong alignment on LegacyPerkWidget_C_ShouldFadePerk");
static_assert(sizeof(LegacyPerkWidget_C_ShouldFadePerk) == 0x000006, "Wrong size on LegacyPerkWidget_C_ShouldFadePerk");
static_assert(offsetof(LegacyPerkWidget_C_ShouldFadePerk, Result) == 0x000000, "Member 'LegacyPerkWidget_C_ShouldFadePerk::Result' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ShouldFadePerk, CallFunc_IsPerkHighlighted_ReturnValue) == 0x000001, "Member 'LegacyPerkWidget_C_ShouldFadePerk::CallFunc_IsPerkHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ShouldFadePerk, CallFunc_IsPerkUnlocked_ReturnValue) == 0x000002, "Member 'LegacyPerkWidget_C_ShouldFadePerk::CallFunc_IsPerkUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ShouldFadePerk, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'LegacyPerkWidget_C_ShouldFadePerk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ShouldFadePerk, CallFunc_Not_PreBool_ReturnValue2) == 0x000004, "Member 'LegacyPerkWidget_C_ShouldFadePerk::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_ShouldFadePerk, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'LegacyPerkWidget_C_ShouldFadePerk::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.InitializeTextOnlyPerk
// 0x0050 (0x0050 - 0x0000)
struct LegacyPerkWidget_C_InitializeTextOnlyPerk final
{
public:
	struct FTooltipStat                           CallFunc_GetPerkStat_TooltipStat;                  // 0x0000(0x0038)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTooltipStatWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LegacyPerkWidget_C_InitializeTextOnlyPerk) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_InitializeTextOnlyPerk");
static_assert(sizeof(LegacyPerkWidget_C_InitializeTextOnlyPerk) == 0x000050, "Wrong size on LegacyPerkWidget_C_InitializeTextOnlyPerk");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextOnlyPerk, CallFunc_GetPerkStat_TooltipStat) == 0x000000, "Member 'LegacyPerkWidget_C_InitializeTextOnlyPerk::CallFunc_GetPerkStat_TooltipStat' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextOnlyPerk, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'LegacyPerkWidget_C_InitializeTextOnlyPerk::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextOnlyPerk, CallFunc_Create_ReturnValue) == 0x000040, "Member 'LegacyPerkWidget_C_InitializeTextOnlyPerk::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextOnlyPerk, CallFunc_AddChild_ReturnValue) == 0x000048, "Member 'LegacyPerkWidget_C_InitializeTextOnlyPerk::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.InitializeHeroBonusIcon
// 0x00C8 (0x00C8 - 0x0000)
struct LegacyPerkWidget_C_InitializeHeroBonusIcon final
{
public:
	EFortSupportBonusType                         SupportPerkType;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortSupportBonusType                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable3;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortSupportBonusType                         CallFunc_GetSupportBonusType_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x0090)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LegacyPerkWidget_C_InitializeHeroBonusIcon) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_InitializeHeroBonusIcon");
static_assert(sizeof(LegacyPerkWidget_C_InitializeHeroBonusIcon) == 0x0000C8, "Wrong size on LegacyPerkWidget_C_InitializeHeroBonusIcon");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, SupportPerkType) == 0x000000, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::SupportPerkType' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, Temp_byte_Variable) == 0x000001, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, Temp_object_Variable) == 0x000008, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, Temp_object_Variable2) == 0x000010, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, Temp_object_Variable3) == 0x000018, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, CallFunc_GetSupportBonusType_ReturnValue) == 0x000020, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::CallFunc_GetSupportBonusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, K2Node_Select_Default) == 0x000028, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeHeroBonusIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'LegacyPerkWidget_C_InitializeHeroBonusIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.SetupBadge
// 0x00B8 (0x00B8 - 0x0000)
struct LegacyPerkWidget_C_SetupBadge final
{
public:
	EFortSupportBonusType                         SupportPerkType;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetTierAbilityBrush_SlateBrush;           // 0x0008(0x0090)()
	bool                                          CallFunc_IsTierPerk_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRequiredLevel_ReturnValue;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A0(0x0018)()
};
static_assert(alignof(LegacyPerkWidget_C_SetupBadge) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_SetupBadge");
static_assert(sizeof(LegacyPerkWidget_C_SetupBadge) == 0x0000B8, "Wrong size on LegacyPerkWidget_C_SetupBadge");
static_assert(offsetof(LegacyPerkWidget_C_SetupBadge, SupportPerkType) == 0x000000, "Member 'LegacyPerkWidget_C_SetupBadge::SupportPerkType' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_SetupBadge, CallFunc_GetTierAbilityBrush_SlateBrush) == 0x000008, "Member 'LegacyPerkWidget_C_SetupBadge::CallFunc_GetTierAbilityBrush_SlateBrush' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_SetupBadge, CallFunc_IsTierPerk_ReturnValue) == 0x000098, "Member 'LegacyPerkWidget_C_SetupBadge::CallFunc_IsTierPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_SetupBadge, CallFunc_GetRequiredLevel_ReturnValue) == 0x00009C, "Member 'LegacyPerkWidget_C_SetupBadge::CallFunc_GetRequiredLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_SetupBadge, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A0, "Member 'LegacyPerkWidget_C_SetupBadge::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.GetPerkStat
// 0x0258 (0x0258 - 0x0000)
struct LegacyPerkWidget_C_GetPerkStat final
{
public:
	struct FTooltipStat                           TooltipStat;                                       // 0x0000(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemTier                                 CallFunc_GetPerkTier_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue;              // 0x0040(0x0018)()
	bool                                          CallFunc_IsTierPerk_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue2;             // 0x00A0(0x0018)()
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00C0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetTierText_ReturnValue;                  // 0x0100(0x0018)()
	int32                                         CallFunc_GetRequiredLevel_ReturnValue;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0120(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0160(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0188(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x01E0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x01F0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0208(0x0018)()
	struct FTooltipStat                           K2Node_MakeStruct_TooltipStat;                     // 0x0220(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(LegacyPerkWidget_C_GetPerkStat) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_GetPerkStat");
static_assert(sizeof(LegacyPerkWidget_C_GetPerkStat) == 0x000258, "Wrong size on LegacyPerkWidget_C_GetPerkStat");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, TooltipStat) == 0x000000, "Member 'LegacyPerkWidget_C_GetPerkStat::TooltipStat' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, Temp_bool_Variable) == 0x000038, "Member 'LegacyPerkWidget_C_GetPerkStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_GetPerkTier_ReturnValue) == 0x000039, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_GetPerkTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_GetTooltipTitle_ReturnValue) == 0x000040, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_GetTooltipTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_IsTierPerk_ReturnValue) == 0x000058, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_IsTierPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_GetTooltipTitle_ReturnValue2) == 0x0000A0, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_GetTooltipTitle_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_GetContext_ReturnValue) == 0x0000B8, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeStruct_FormatArgumentData2) == 0x0000C0, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_GetTierText_ReturnValue) == 0x000100, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_GetTierText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_GetRequiredLevel_ReturnValue) == 0x000118, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_GetRequiredLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeStruct_FormatArgumentData3) == 0x000120, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_Conv_IntToText_ReturnValue) == 0x000160, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeArray_Array) == 0x000178, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeStruct_FormatArgumentData4) == 0x000188, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeArray_Array2) == 0x0001E0, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, CallFunc_Format_ReturnValue2) == 0x0001F0, "Member 'LegacyPerkWidget_C_GetPerkStat::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_Select_Default) == 0x000208, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_GetPerkStat, K2Node_MakeStruct_TooltipStat) == 0x000220, "Member 'LegacyPerkWidget_C_GetPerkStat::K2Node_MakeStruct_TooltipStat' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.HighlightBadge
// 0x0048 (0x0048 - 0x0000)
struct LegacyPerkWidget_C_HighlightBadge final
{
public:
	struct FLinearColor                           CallFunc_GetHighlightColor_Color;                  // 0x0000(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetHighlightColor_Color2;                 // 0x0010(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
};
static_assert(alignof(LegacyPerkWidget_C_HighlightBadge) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_HighlightBadge");
static_assert(sizeof(LegacyPerkWidget_C_HighlightBadge) == 0x000048, "Wrong size on LegacyPerkWidget_C_HighlightBadge");
static_assert(offsetof(LegacyPerkWidget_C_HighlightBadge, CallFunc_GetHighlightColor_Color) == 0x000000, "Member 'LegacyPerkWidget_C_HighlightBadge::CallFunc_GetHighlightColor_Color' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_HighlightBadge, CallFunc_GetHighlightColor_Color2) == 0x000010, "Member 'LegacyPerkWidget_C_HighlightBadge::CallFunc_GetHighlightColor_Color2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_HighlightBadge, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'LegacyPerkWidget_C_HighlightBadge::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.InitializeTextInfo
// 0x0090 (0x0090 - 0x0000)
struct LegacyPerkWidget_C_InitializeTextInfo final
{
public:
	EFortSupportBonusType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0038(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortSupportBonusType                         CallFunc_GetSupportBonusType_ReturnValue;          // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0058(0x0018)()
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue;              // 0x0078(0x0018)()
};
static_assert(alignof(LegacyPerkWidget_C_InitializeTextInfo) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_InitializeTextInfo");
static_assert(sizeof(LegacyPerkWidget_C_InitializeTextInfo) == 0x000090, "Wrong size on LegacyPerkWidget_C_InitializeTextInfo");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_byte_Variable) == 0x000000, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_text_Variable) == 0x000008, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_text_Variable2) == 0x000020, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_text_Variable3) == 0x000038, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_bool_Variable) == 0x000050, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_byte_Variable2) == 0x000051, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, Temp_byte_Variable3) == 0x000052, "Member 'LegacyPerkWidget_C_InitializeTextInfo::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, CallFunc_GetSupportBonusType_ReturnValue) == 0x000053, "Member 'LegacyPerkWidget_C_InitializeTextInfo::CallFunc_GetSupportBonusType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, K2Node_Select_Default) == 0x000058, "Member 'LegacyPerkWidget_C_InitializeTextInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, K2Node_Select2_Default) == 0x000070, "Member 'LegacyPerkWidget_C_InitializeTextInfo::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_InitializeTextInfo, CallFunc_GetTooltipTitle_ReturnValue) == 0x000078, "Member 'LegacyPerkWidget_C_InitializeTextInfo::CallFunc_GetTooltipTitle_ReturnValue' has a wrong offset!");

// Function LegacyPerkWidget.LegacyPerkWidget_C.CreateToolTipWidget
// 0x0040 (0x0040 - 0x0000)
struct LegacyPerkWidget_C_CreateToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetTooltipDescription_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue;              // 0x0018(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_Basic_Multi_Line_Tooltip_Output;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LegacyPerkWidget_C_CreateToolTipWidget) == 0x000008, "Wrong alignment on LegacyPerkWidget_C_CreateToolTipWidget");
static_assert(sizeof(LegacyPerkWidget_C_CreateToolTipWidget) == 0x000040, "Wrong size on LegacyPerkWidget_C_CreateToolTipWidget");
static_assert(offsetof(LegacyPerkWidget_C_CreateToolTipWidget, ReturnValue) == 0x000000, "Member 'LegacyPerkWidget_C_CreateToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_CreateToolTipWidget, CallFunc_GetTooltipDescription_ReturnValue) == 0x000008, "Member 'LegacyPerkWidget_C_CreateToolTipWidget::CallFunc_GetTooltipDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_CreateToolTipWidget, CallFunc_GetTooltipTitle_ReturnValue) == 0x000018, "Member 'LegacyPerkWidget_C_CreateToolTipWidget::CallFunc_GetTooltipTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_CreateToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'LegacyPerkWidget_C_CreateToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LegacyPerkWidget_C_CreateToolTipWidget, CallFunc_Create_Basic_Multi_Line_Tooltip_Output) == 0x000038, "Member 'LegacyPerkWidget_C_CreateToolTipWidget::CallFunc_Create_Basic_Multi_Line_Tooltip_Output' has a wrong offset!");

}

