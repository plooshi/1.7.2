#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCooldownMeter

#include "Basic.hpp"

#include "ItemCooldownMeter_classes.hpp"
#include "ItemCooldownMeter_parameters.hpp"


namespace SDK
{

// Function ItemCooldownMeter.ItemCooldownMeter_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortBrushSize                          Brush_Size                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCooldownMeter_C::Update(EFortBrushSize Brush_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCooldownMeter_C", "Update");

	Params::ItemCooldownMeter_C_Update Parms{};

	Parms.Brush_Size = Brush_Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCooldownMeter.ItemCooldownMeter_C.Set Cooldown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimespan                        Time_Left                                              (Parm, NoDestructor, HasGetValueTypeHash)

void UItemCooldownMeter_C::Set_Cooldown(const struct FTimespan& Time_Left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCooldownMeter_C", "Set Cooldown");

	Params::ItemCooldownMeter_C_Set_Cooldown Parms{};

	Parms.Time_Left = std::move(Time_Left);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCooldownMeter.ItemCooldownMeter_C.GetSecondsCorrectedMinutes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Minutes                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UItemCooldownMeter_C::GetSecondsCorrectedMinutes(int32 Minutes, int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCooldownMeter_C", "GetSecondsCorrectedMinutes");

	Params::ItemCooldownMeter_C_GetSecondsCorrectedMinutes Parms{};

	Parms.Minutes = Minutes;
	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ItemCooldownMeter.ItemCooldownMeter_C.GetCooldownMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         CooldownMat                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCooldownMeter_C::GetCooldownMaterial(class UMaterialInstanceDynamic** CooldownMat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCooldownMeter_C", "GetCooldownMaterial");

	Params::ItemCooldownMeter_C_GetCooldownMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CooldownMat != nullptr)
		*CooldownMat = Parms.CooldownMat;
}

}

