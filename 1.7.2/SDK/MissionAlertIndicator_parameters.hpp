#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionAlertIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MissionAlertIndicator.MissionAlertIndicator_C.ExecuteUbergraph_MissionAlertIndicator
// 0x0004 (0x0004 - 0x0000)
struct MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator) == 0x000004, "Wrong alignment on MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator");
static_assert(sizeof(MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator) == 0x000004, "Wrong size on MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator");
static_assert(offsetof(MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator, EntryPoint) == 0x000000, "Member 'MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator::EntryPoint' has a wrong offset!");

// Function MissionAlertIndicator.MissionAlertIndicator_C.ToggleTimer
// 0x0020 (0x0020 - 0x0000)
struct MissionAlertIndicator_C_ToggleTimer final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(MissionAlertIndicator_C_ToggleTimer) == 0x000008, "Wrong alignment on MissionAlertIndicator_C_ToggleTimer");
static_assert(sizeof(MissionAlertIndicator_C_ToggleTimer) == 0x000020, "Wrong size on MissionAlertIndicator_C_ToggleTimer");
static_assert(offsetof(MissionAlertIndicator_C_ToggleTimer, IsEnabled) == 0x000000, "Member 'MissionAlertIndicator_C_ToggleTimer::IsEnabled' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_ToggleTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MissionAlertIndicator_C_ToggleTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_ToggleTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'MissionAlertIndicator_C_ToggleTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

