#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarBase

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function QuickbarBase.QuickbarBase_C.ExecuteUbergraph_QuickbarBase
// 0x0230 (0x0230 - 0x0000)
struct QuickbarBase_C_ExecuteUbergraph_QuickbarBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsAdded;                     // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsRemoved;                   // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid2;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index2;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex4;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid3;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item3;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex3;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex2;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue3;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item4;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue4;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPlayerDeathReport                 K2Node_CustomEvent_DeathReport;                    // 0x00E0(0x0050)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue5;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FFortPlayerDeathReport& DeathReport)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0168(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate8;             // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate10;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate11;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate12;            // 0x01B8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate14;            // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate15;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FFortPlayerDeathReport& DeathReport)> K2Node_CreateDelegate_OutputDelegate16;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate17;            // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate18;            // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue6;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase) == 0x000008, "Wrong alignment on QuickbarBase_C_ExecuteUbergraph_QuickbarBase");
static_assert(sizeof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase) == 0x000230, "Wrong size on QuickbarBase_C_ExecuteUbergraph_QuickbarBase");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, EntryPoint) == 0x000000, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ItemsAdded) == 0x000008, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ItemsAdded' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ItemsRemoved) == 0x000018, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ItemsRemoved' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid) == 0x000038, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index) == 0x00003C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid2) == 0x000040, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index2) == 0x000044, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item) == 0x000048, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate2) == 0x000050, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item2) == 0x000060, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex4) == 0x000068, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Slot2) == 0x00006C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Slot2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid3) == 0x000071, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index3) == 0x000074, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item3) == 0x000078, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex3) == 0x000082, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Array_Index_Variable) == 0x000084, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000088, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex2) == 0x000089, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue) == 0x000090, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue2) == 0x000098, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex) == 0x0000A8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Slot) == 0x0000AC, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue3) == 0x0000B0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate3) == 0x0000B8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item4) == 0x0000C8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue4) == 0x0000D8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_DeathReport) == 0x0000E0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_DeathReport' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate4) == 0x000130, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue5) == 0x000140, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate5) == 0x000148, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate6) == 0x000158, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate7) == 0x000168, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate8) == 0x000178, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate9) == 0x000188, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate10) == 0x000198, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate11) == 0x0001A8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate12) == 0x0001B8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate13) == 0x0001C8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate14) == 0x0001D8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate15) == 0x0001E8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate16) == 0x0001F8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate17) == 0x000208, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate18) == 0x000218, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue6) == 0x000228, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue6' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnLocalPlayerDied
// 0x0050 (0x0050 - 0x0000)
struct QuickbarBase_C_OnLocalPlayerDied final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuickbarBase_C_OnLocalPlayerDied) == 0x000008, "Wrong alignment on QuickbarBase_C_OnLocalPlayerDied");
static_assert(sizeof(QuickbarBase_C_OnLocalPlayerDied) == 0x000050, "Wrong size on QuickbarBase_C_OnLocalPlayerDied");
static_assert(offsetof(QuickbarBase_C_OnLocalPlayerDied, DeathReport) == 0x000000, "Member 'QuickbarBase_C_OnLocalPlayerDied::DeathReport' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarSecondarySlotFocusChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0 final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot_0;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0) == 0x000004, "Wrong alignment on QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0");
static_assert(sizeof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0) == 0x000008, "Wrong size on QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0, Slot_0) == 0x000004, "Member 'QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0::Slot_0' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarForceFullUpdate
// 0x0001 (0x0001 - 0x0000)
struct QuickbarBase_C_OnQuickbarForceFullUpdate final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarForceFullUpdate) == 0x000001, "Wrong alignment on QuickbarBase_C_OnQuickbarForceFullUpdate");
static_assert(sizeof(QuickbarBase_C_OnQuickbarForceFullUpdate) == 0x000001, "Wrong size on QuickbarBase_C_OnQuickbarForceFullUpdate");
static_assert(offsetof(QuickbarBase_C_OnQuickbarForceFullUpdate, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarForceFullUpdate::QuickbarIndex' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarContentsChanged
// 0x0001 (0x0001 - 0x0000)
struct QuickbarBase_C_OnQuickbarContentsChanged final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarContentsChanged) == 0x000001, "Wrong alignment on QuickbarBase_C_OnQuickbarContentsChanged");
static_assert(sizeof(QuickbarBase_C_OnQuickbarContentsChanged) == 0x000001, "Wrong size on QuickbarBase_C_OnQuickbarContentsChanged");
static_assert(offsetof(QuickbarBase_C_OnQuickbarContentsChanged, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarContentsChanged::QuickbarIndex' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarSlotFocusChanged
// 0x0008 (0x0008 - 0x0000)
struct QuickbarBase_C_OnQuickbarSlotFocusChanged final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot_0;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarSlotFocusChanged) == 0x000004, "Wrong alignment on QuickbarBase_C_OnQuickbarSlotFocusChanged");
static_assert(sizeof(QuickbarBase_C_OnQuickbarSlotFocusChanged) == 0x000008, "Wrong size on QuickbarBase_C_OnQuickbarSlotFocusChanged");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSlotFocusChanged, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarSlotFocusChanged::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSlotFocusChanged, Slot_0) == 0x000004, "Member 'QuickbarBase_C_OnQuickbarSlotFocusChanged::Slot_0' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnWorldItemListChanged
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_OnWorldItemListChanged final
{
public:
	TArray<class UFortWorldItem*>                 ItemsAdded;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 ItemsRemoved;                                      // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(QuickbarBase_C_OnWorldItemListChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_OnWorldItemListChanged");
static_assert(sizeof(QuickbarBase_C_OnWorldItemListChanged) == 0x000020, "Wrong size on QuickbarBase_C_OnWorldItemListChanged");
static_assert(offsetof(QuickbarBase_C_OnWorldItemListChanged, ItemsAdded) == 0x000000, "Member 'QuickbarBase_C_OnWorldItemListChanged::ItemsAdded' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnWorldItemListChanged, ItemsRemoved) == 0x000010, "Member 'QuickbarBase_C_OnWorldItemListChanged::ItemsRemoved' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Is Valid Slot
// 0x0030 (0x0030 - 0x0000)
struct QuickbarBase_C_Is_Valid_Slot final
{
public:
	int32                                         Slot_0;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Array_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Is_Valid_Slot) == 0x000008, "Wrong alignment on QuickbarBase_C_Is_Valid_Slot");
static_assert(sizeof(QuickbarBase_C_Is_Valid_Slot) == 0x000030, "Wrong size on QuickbarBase_C_Is_Valid_Slot");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Slot_0) == 0x000000, "Member 'QuickbarBase_C_Is_Valid_Slot::Slot_0' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Is_Valid) == 0x000004, "Member 'QuickbarBase_C_Is_Valid_Slot::Is_Valid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Array_Index) == 0x000008, "Member 'QuickbarBase_C_Is_Valid_Slot::Array_Index' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Array_Get_Item) == 0x000020, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002D, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Maximize
// 0x0040 (0x0040 - 0x0000)
struct QuickbarBase_C_Maximize final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item2;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Maximize) == 0x000008, "Wrong alignment on QuickbarBase_C_Maximize");
static_assert(sizeof(QuickbarBase_C_Maximize) == 0x000040, "Wrong size on QuickbarBase_C_Maximize");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'QuickbarBase_C_Maximize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'QuickbarBase_C_Maximize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Array_Index_Variable) == 0x000008, "Member 'QuickbarBase_C_Maximize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Loop_Counter_Variable2) == 0x00000C, "Member 'QuickbarBase_C_Maximize::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Add_IntInt_ReturnValue2) == 0x000010, "Member 'QuickbarBase_C_Maximize::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'QuickbarBase_C_Maximize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Array_Index_Variable2) == 0x000018, "Member 'QuickbarBase_C_Maximize::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Get_Item) == 0x000020, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'QuickbarBase_C_Maximize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Length_ReturnValue2) == 0x00002C, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Get_Item2) == 0x000030, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Less_IntInt_ReturnValue2) == 0x000038, "Member 'QuickbarBase_C_Maximize::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Minimize
// 0x0038 (0x0038 - 0x0000)
struct QuickbarBase_C_Minimize final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item2;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Minimize) == 0x000008, "Wrong alignment on QuickbarBase_C_Minimize");
static_assert(sizeof(QuickbarBase_C_Minimize) == 0x000038, "Wrong size on QuickbarBase_C_Minimize");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'QuickbarBase_C_Minimize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'QuickbarBase_C_Minimize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Array_Index_Variable) == 0x000008, "Member 'QuickbarBase_C_Minimize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Loop_Counter_Variable2) == 0x00000C, "Member 'QuickbarBase_C_Minimize::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Add_IntInt_ReturnValue2) == 0x000010, "Member 'QuickbarBase_C_Minimize::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Array_Index_Variable2) == 0x000014, "Member 'QuickbarBase_C_Minimize::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Get_Item) == 0x000018, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'QuickbarBase_C_Minimize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Get_Item2) == 0x000028, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Length_ReturnValue2) == 0x000030, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Less_IntInt_ReturnValue2) == 0x000034, "Member 'QuickbarBase_C_Minimize::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.HandleKeybindsChanged
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_HandleKeybindsChanged final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_HandleKeybindsChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_HandleKeybindsChanged");
static_assert(sizeof(QuickbarBase_C_HandleKeybindsChanged) == 0x000020, "Wrong size on QuickbarBase_C_HandleKeybindsChanged");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_HandleKeybindsChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_HandleKeybindsChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.RefreshQuickbar
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_RefreshQuickbar final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_RefreshQuickbar) == 0x000008, "Wrong alignment on QuickbarBase_C_RefreshQuickbar");
static_assert(sizeof(QuickbarBase_C_RefreshQuickbar) == 0x000020, "Wrong size on QuickbarBase_C_RefreshQuickbar");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_RefreshQuickbar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_RefreshQuickbar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

