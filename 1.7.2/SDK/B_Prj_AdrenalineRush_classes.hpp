#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_AdrenalineRush

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_AdrenalineRush.B_Prj_AdrenalineRush_C
// 0x0098 (0x0890 - 0x07F8)
class AB_Prj_AdrenalineRush_C final : public AFortProjectileBase
{
public:
	uint8                                         Pad_7F8[0x8];                                      // 0x07F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0800(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_AdrenalineRush_HealingSparkleInit_01;            // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  ShockwavePostProcess;                              // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Shockwave;                                         // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         PP_Shockwave_Transition_9A3E45BA49610747DB8700A8BAA24ED4; // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PP_Shockwave_Fader_9A3E45BA49610747DB8700A8BAA24ED4; // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PP_Shockwave__Direction_9A3E45BA49610747DB8700A8BAA24ED4; // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PP_Shockwave;                                      // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shockwave_Ring_Size_Z;                             // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  ShockwavePP;                                       // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 PP_Shockwave_PlayRate;                             // 0x0848(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                 PP_Shockwave_SpawnRate;                            // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         Shockwave_Particle_Max_Radius_Clamp;               // 0x0868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_AdrenalineRush_Start;                        // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_AdrenalineShockWave_FP;                      // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_AdrenalineShockWave_TP;                      // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShockWave_PlayRate;                                // 0x0888(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_AdrenalineRush(int32 EntryPoint);
	void PassInfo(float Radius, class AFortPlayerPawn* Owner_0, bool AOE_Heal, bool Upgrade_InstaHeal, bool HOT, float HOT_Duration, bool Resurrect);
	void PP_Shockwave__UpdateFunc();
	void PP_Shockwave__FinishedFunc();
	void UserConstructionScript();
	void DestroyPP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_AdrenalineRush_C">();
	}
	static class AB_Prj_AdrenalineRush_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_AdrenalineRush_C>();
	}
};
static_assert(alignof(AB_Prj_AdrenalineRush_C) == 0x000008, "Wrong alignment on AB_Prj_AdrenalineRush_C");
static_assert(sizeof(AB_Prj_AdrenalineRush_C) == 0x000890, "Wrong size on AB_Prj_AdrenalineRush_C");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, UberGraphFrame) == 0x000800, "Member 'AB_Prj_AdrenalineRush_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, P_AdrenalineRush_HealingSparkleInit_01) == 0x000808, "Member 'AB_Prj_AdrenalineRush_C::P_AdrenalineRush_HealingSparkleInit_01' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, ShockwavePostProcess) == 0x000810, "Member 'AB_Prj_AdrenalineRush_C::ShockwavePostProcess' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, Shockwave) == 0x000818, "Member 'AB_Prj_AdrenalineRush_C::Shockwave' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, PP_Shockwave_Transition_9A3E45BA49610747DB8700A8BAA24ED4) == 0x000820, "Member 'AB_Prj_AdrenalineRush_C::PP_Shockwave_Transition_9A3E45BA49610747DB8700A8BAA24ED4' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, PP_Shockwave_Fader_9A3E45BA49610747DB8700A8BAA24ED4) == 0x000824, "Member 'AB_Prj_AdrenalineRush_C::PP_Shockwave_Fader_9A3E45BA49610747DB8700A8BAA24ED4' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, PP_Shockwave__Direction_9A3E45BA49610747DB8700A8BAA24ED4) == 0x000828, "Member 'AB_Prj_AdrenalineRush_C::PP_Shockwave__Direction_9A3E45BA49610747DB8700A8BAA24ED4' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, PP_Shockwave) == 0x000830, "Member 'AB_Prj_AdrenalineRush_C::PP_Shockwave' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, Shockwave_Ring_Size_Z) == 0x000838, "Member 'AB_Prj_AdrenalineRush_C::Shockwave_Ring_Size_Z' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, ShockwavePP) == 0x000840, "Member 'AB_Prj_AdrenalineRush_C::ShockwavePP' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, PP_Shockwave_PlayRate) == 0x000848, "Member 'AB_Prj_AdrenalineRush_C::PP_Shockwave_PlayRate' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, PP_Shockwave_SpawnRate) == 0x000858, "Member 'AB_Prj_AdrenalineRush_C::PP_Shockwave_SpawnRate' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, Shockwave_Particle_Max_Radius_Clamp) == 0x000868, "Member 'AB_Prj_AdrenalineRush_C::Shockwave_Particle_Max_Radius_Clamp' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, Sound_AdrenalineRush_Start) == 0x000870, "Member 'AB_Prj_AdrenalineRush_C::Sound_AdrenalineRush_Start' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, Sound_AdrenalineShockWave_FP) == 0x000878, "Member 'AB_Prj_AdrenalineRush_C::Sound_AdrenalineShockWave_FP' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, Sound_AdrenalineShockWave_TP) == 0x000880, "Member 'AB_Prj_AdrenalineRush_C::Sound_AdrenalineShockWave_TP' has a wrong offset!");
static_assert(offsetof(AB_Prj_AdrenalineRush_C, ShockWave_PlayRate) == 0x000888, "Member 'AB_Prj_AdrenalineRush_C::ShockWave_PlayRate' has a wrong offset!");

}

