#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TracerGeneric

#include "Basic.hpp"

#include "TracerGeneric_classes.hpp"
#include "TracerGeneric_parameters.hpp"


namespace SDK
{

// Function TracerGeneric.TracerGeneric_C.ExecuteUbergraph_TracerGeneric
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATracerGeneric_C::ExecuteUbergraph_TracerGeneric(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "ExecuteUbergraph_TracerGeneric");

	Params::TracerGeneric_C_ExecuteUbergraph_TracerGeneric Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TracerGeneric.TracerGeneric_C.OnInit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          Start_0                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End_0                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATracerGeneric_C::OnInit(const struct FVector& Start_0, const struct FVector& End_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "OnInit");

	Params::TracerGeneric_C_OnInit Parms{};

	Parms.Start_0 = std::move(Start_0);
	Parms.End_0 = std::move(End_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TracerGeneric.TracerGeneric_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATracerGeneric_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "ReceiveTick");

	Params::TracerGeneric_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TracerGeneric.TracerGeneric_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATracerGeneric_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TracerGeneric.TracerGeneric_C.TrackPassBy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Changed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Pass_Distance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATracerGeneric_C::TrackPassBy(bool* Changed, float* Pass_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "TrackPassBy");

	Params::TracerGeneric_C_TrackPassBy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Changed != nullptr)
		*Changed = Parms.Changed;

	if (Pass_Distance != nullptr)
		*Pass_Distance = Parms.Pass_Distance;
}


// Function TracerGeneric.TracerGeneric_C.PlayPassBySound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATracerGeneric_C::PlayPassBySound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "PlayPassBySound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TracerGeneric.TracerGeneric_C.GetLocalPawnForPassBy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFortPlayerPawn* ATracerGeneric_C::GetLocalPawnForPassBy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TracerGeneric_C", "GetLocalPawnForPassBy");

	Params::TracerGeneric_C_GetLocalPawnForPassBy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

