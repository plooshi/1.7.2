#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemTooltipContent

#include "Basic.hpp"

#include "ItemTooltipContent_classes.hpp"
#include "ItemTooltipContent_parameters.hpp"


namespace SDK
{

// Function ItemTooltipContent.ItemTooltipContent_C.ExecuteUbergraph_ItemTooltipContent
// ()
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTooltipContent_C::ExecuteUbergraph_ItemTooltipContent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "ExecuteUbergraph_ItemTooltipContent");

	Params::ItemTooltipContent_C_ExecuteUbergraph_ItemTooltipContent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UItemTooltipContent_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Update
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemTooltipContent_C::Update(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Update");

	Params::ItemTooltipContent_C_Update Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Item Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortItem*                        Comparison_Item                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemTooltip_DisplayMode                DisplayMode_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OverrideQuantity_0                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTooltipContent_C::Set_Item_Data(class UFortItem* Item_0, class UFortItem* Comparison_Item, EItemTooltip_DisplayMode DisplayMode_0, int32 OverrideQuantity_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Item Data");

	Params::ItemTooltipContent_C_Set_Item_Data Parms{};

	Parms.Item_0 = Item_0;
	Parms.Comparison_Item = Comparison_Item;
	Parms.DisplayMode_0 = DisplayMode_0;
	Parms.OverrideQuantity_0 = OverrideQuantity_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Basic Info
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Basic_Info()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Basic Info");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Weapon DPS Stat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Weapon_DPS_Stat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Weapon DPS Stat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Worker Stats
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Worker_Stats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Worker Stats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Alteration Info
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Alteration_Info()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Alteration Info");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Durability
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Durability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Durability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Intro
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Intro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Intro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Basic Stat Block
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Basic_Stat_Block()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Basic Stat Block");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Display Name Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Display_Name_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Display Name Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Primary Category Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Primary_Category_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Primary Category Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Secondary Category Icon & Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Secondary_Category_Icon___Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Secondary Category Icon & Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Tertiary Category Icon & Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Tertiary_Category_Icon___Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Tertiary Category Icon & Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Tier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Tier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Tier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Level Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Level_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Level Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Display Mode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemTooltip_DisplayMode                DisplayMode_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTooltipContent_C::Set_Display_Mode(EItemTooltip_DisplayMode DisplayMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Display Mode");

	Params::ItemTooltipContent_C_Set_Display_Mode Parms{};

	Parms.DisplayMode_0 = DisplayMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Rarity Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Rarity_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Rarity Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Schematic Ingredients
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Schematic_Ingredients()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Schematic Ingredients");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Get Query Tag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Tag                                                    (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UItemTooltipContent_C::Get_Query_Tag(struct FGameplayTag* Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Get Query Tag");

	Params::ItemTooltipContent_C_Get_Query_Tag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tag != nullptr)
		*Tag = std::move(Parms.Tag);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Init Tooltip Context
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortTooltipContext*              Tooltip_Context                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTooltipContent_C::Init_Tooltip_Context(class UFortTooltipContext** Tooltip_Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Init Tooltip Context");

	Params::ItemTooltipContent_C_Init_Tooltip_Context Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tooltip_Context != nullptr)
		*Tooltip_Context = Parms.Tooltip_Context;
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Ingredients
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Ingredients()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Ingredients");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.BuildHeroBonuses
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::BuildHeroBonuses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "BuildHeroBonuses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.IsComparison
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UItemTooltipContent_C::IsComparison()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "IsComparison");

	Params::ItemTooltipContent_C_IsComparison Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ItemTooltipContent.ItemTooltipContent_C.Build Perks List
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Build_Perks_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Build Perks List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Create Custom Integer Stat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EFortStatValueDisplayType               Display_Type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Label                                                  (Parm)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Comparison_Value                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HigherIsBetter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFortDisplayAttribute            Display_Attribute                                      (Parm, OutParm)

void UItemTooltipContent_C::Create_Custom_Integer_Stat(EFortStatValueDisplayType Display_Type, const class FText& Label, int32 Value, int32 Comparison_Value, bool HigherIsBetter, struct FFortDisplayAttribute* Display_Attribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Create Custom Integer Stat");

	Params::ItemTooltipContent_C_Create_Custom_Integer_Stat Parms{};

	Parms.Display_Type = Display_Type;
	Parms.Label = std::move(Label);
	Parms.Value = Value;
	Parms.Comparison_Value = Comparison_Value;
	Parms.HigherIsBetter = HigherIsBetter;

	UObject::ProcessEvent(Func, &Parms);

	if (Display_Attribute != nullptr)
		*Display_Attribute = std::move(Parms.Display_Attribute);
}


// Function ItemTooltipContent.ItemTooltipContent_C.SetDescriptionText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::SetDescriptionText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "SetDescriptionText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Quantity
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Quantity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Quantity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.Set Rating
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::Set_Rating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "Set Rating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTooltipContent.ItemTooltipContent_C.ClearExtendedInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTooltipContent_C::ClearExtendedInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTooltipContent_C", "ClearExtendedInfo");

	UObject::ProcessEvent(Func, nullptr);
}

}

