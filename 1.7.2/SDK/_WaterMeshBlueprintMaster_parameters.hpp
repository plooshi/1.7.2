#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: _WaterMeshBlueprintMaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.ExecuteUbergraph__WaterMeshBlueprintMaster
// 0x04F0 (0x04F0 - 0x0000)
struct _WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform; // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector; // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit; // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue2; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue2;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWindManager*                       CallFunc_GetWindManager_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWindManager_C*                         K2Node_DynamicCast_AsWind_Manager;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Generic_C*                  K2Node_CustomEvent_CallingActor;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent8;   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor8;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp8;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex8;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent7;   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor7;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp7;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex7;        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x0180(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent6;   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor6;            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp6;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex6;        // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep4;            // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult4;           // 0x0230(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent5;   // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor5;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp5;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex5;        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent4;   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor4;            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp4;             // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex4;        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep3;            // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult3;           // 0x02F8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent3;   // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor3;            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp3;             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex3;        // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep2;            // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult2;           // 0x03A0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0448(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster) == 0x000010, "Wrong alignment on _WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster) == 0x0004F0, "Wrong size on _WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, EntryPoint) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000004, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector) == 0x000040, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit) == 0x00004C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakTransform_Location) == 0x000050, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakTransform_Scale) == 0x000068, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_X) == 0x000074, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_Y) == 0x000078, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_Z) == 0x00007C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000080, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000088, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue2) == 0x000090, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetVelocity_ReturnValue) == 0x00009C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000A8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_X2) == 0x0000AC, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_Y2) == 0x0000B0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_Z2) == 0x0000B4, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Abs_ReturnValue) == 0x0000B8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x0000BD, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BooleanAND_ReturnValue2) == 0x0000BE, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetGameTimeInSeconds_ReturnValue2) == 0x0000C0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetGameTimeInSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetWindManager_ReturnValue) == 0x0000C8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetWindManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_DynamicCast_AsWind_Manager) == 0x0000D8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_DynamicCast_AsWind_Manager' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_CustomEvent_CallingActor) == 0x0000E8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_CustomEvent_CallingActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000F0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent8) == 0x000108, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent8' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor8) == 0x000110, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor8' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp8) == 0x000118, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp8' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex8) == 0x000120, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex8' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Add_VectorVector_ReturnValue) == 0x000124, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Add_VectorVector_ReturnValue2) == 0x000130, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent7) == 0x000140, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor7) == 0x000148, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp7) == 0x000150, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex7) == 0x000158, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_LineTraceComponent_HitLocation) == 0x00015C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_LineTraceComponent_HitNormal) == 0x000168, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_LineTraceComponent_BoneName) == 0x000178, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_LineTraceComponent_OutHit) == 0x000180, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x000208, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent6) == 0x000210, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor6) == 0x000218, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp6) == 0x000220, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex6) == 0x000228, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep4) == 0x00022C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult4) == 0x000230, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent5) == 0x0002B8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor5) == 0x0002C0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp5) == 0x0002C8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex5) == 0x0002D0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent4) == 0x0002D8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor4) == 0x0002E0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp4) == 0x0002E8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex4) == 0x0002F0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep3) == 0x0002F4, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult3) == 0x0002F8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent3) == 0x000380, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor3) == 0x000388, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp3) == 0x000390, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex3) == 0x000398, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep2) == 0x00039C, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult2) == 0x0003A0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000428, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor2) == 0x000430, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp2) == 0x000438, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000440, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep) == 0x000444, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult) == 0x000448, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0004D0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor) == 0x0004D8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp) == 0x0004E0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0004E8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.ReturnWaterHitLocation
// 0x0008 (0x0008 - 0x0000)
struct _WaterMeshBlueprintMaster_C_ReturnWaterHitLocation final
{
public:
	class APlayerPawn_Generic_C*                  CallingActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_ReturnWaterHitLocation) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_ReturnWaterHitLocation");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_ReturnWaterHitLocation) == 0x000008, "Wrong size on _WaterMeshBlueprintMaster_C_ReturnWaterHitLocation");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ReturnWaterHitLocation, CallingActor) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_ReturnWaterHitLocation::CallingActor' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.SetupMeshCollisionVolumes
// 0x0010 (0x0010 - 0x0000)
struct _WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes final
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Target_Int;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes) == 0x000010, "Wrong size on _WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, StaticMeshComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, Target_Int) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::Target_Int' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.Find Placement on water mesh surfaces
// 0x01B0 (0x01B0 - 0x0000)
struct _WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces final
{
public:
	struct FTransform                             Traced_Transform;                                  // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                VelocityVector;                                    // 0x0030(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Trace_Hit;                                         // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue2;          // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0154(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0160(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x016C(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces) == 0x000010, "Wrong alignment on _WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces) == 0x0001B0, "Wrong size on _WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, Traced_Transform) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::Traced_Transform' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, VelocityVector) == 0x000030, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::VelocityVector' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, Trace_Hit) == 0x00003C, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::Trace_Hit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, Temp_bool_Variable) == 0x00003D, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, K2Node_Select_Default) == 0x000040, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_GetVelocity_ReturnValue) == 0x000048, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000058, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Add_VectorVector_ReturnValue2) == 0x000078, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000084, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_HitNormal) == 0x000090, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_BoneName) == 0x0000A0, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_OutHit) == 0x0000A8, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x000130, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Cross_VectorVector_ReturnValue) == 0x000134, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Cross_VectorVector_ReturnValue2) == 0x000140, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Cross_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_VSize_ReturnValue) == 0x00014C, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000150, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_SelectVector_ReturnValue) == 0x000154, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Normal_ReturnValue) == 0x000160, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_MakeRotFromXZ_ReturnValue) == 0x00016C, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.Handle Water Penetration Components And Arrays
// 0x0040 (0x0040 - 0x0000)
struct _WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays final
{
public:
	bool                                          In_T_Out_F;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Touching_Actor;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Touching_Volume;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Generic_C*                  K2Node_DynamicCast_AsPlayer_Pawn_Generic;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays) == 0x000040, "Wrong size on _WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, In_T_Out_F) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::In_T_Out_F' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Touching_Actor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Touching_Actor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Touching_Volume) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Touching_Volume' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Temp_int_Variable) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, K2Node_DynamicCast_AsPlayer_Pawn_Generic) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::K2Node_DynamicCast_AsPlayer_Pawn_Generic' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, K2Node_DynamicCast_bSuccess) == 0x000028, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Temp_int_Variable2) == 0x00002C, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Temp_bool_Variable) == 0x000030, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, K2Node_Select_Default) == 0x000034, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.Construction
// 0x0014 (0x0014 - 0x0000)
struct _WaterMeshBlueprintMaster_C_Construction final
{
public:
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_Construction) == 0x000004, "Wrong alignment on _WaterMeshBlueprintMaster_C_Construction");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_Construction) == 0x000014, "Wrong size on _WaterMeshBlueprintMaster_C_Construction");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_GetNumMaterials_ReturnValue) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, Temp_int_Variable) == 0x000004, "Member '_WaterMeshBlueprintMaster_C_Construction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

