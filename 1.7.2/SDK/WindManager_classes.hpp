#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WindManager.WindManager_C
// 0x0098 (0x0670 - 0x05D8)
class AWindManager_C final : public AFortWindManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05D8(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   EmptyStaticMesh;                                   // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               TopDownCaptureActorOfTheWorld;                     // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               DebugParticleSystem;                               // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D03;                         // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D02;                         // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D01;                         // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SmallerRenderTargetOrthoWidth;                     // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LargestRenderTargetOrthoWidth;                     // 0x0624(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MidSizedRenderTargetOrthoWidth;                    // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         External_Test_Actor;                               // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          DebugParticleBasedWind;                            // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortStaticMeshActor*>           World_Terrain_Meshes;                              // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                Camera_Height_Offset;                              // 0x0658(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Character_Initialized;                             // 0x0664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Particle_Z_Offset;                                 // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate_Grass_Wind_And_Top_Down_Z_Depth_Texture_Renders_Of_the_World; // 0x066C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Has_Water_Interaction_Enabled_Variable_Been_Set;   // 0x066D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Water_Interaction_Enabled;                      // 0x066E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WindManager(int32 EntryPoint);
	void Register_player_for_render_to_texture_purposes(class APlayerPawn_Generic_C* Player_Pawn_Generic);
	void ReceiveTick(float DeltaSeconds);
	void OnWorldReady();
	void Add_Render_To_Texture_Particle(class UParticleSystem* EmitterTemplate, const struct FTransform& InTransform);
	void UserConstructionScript();
	void InitializeOrthoSettings();
	void SetRenderOnlyAssets(class UPrimitiveComponent* InComponent);
	void ActivateTestContent(bool Condition);
	struct FVector CeilVector(float Scale, class USceneCaptureComponent2D* Scene_Capture);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WindManager_C">();
	}
	static class AWindManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWindManager_C>();
	}
};
static_assert(alignof(AWindManager_C) == 0x000008, "Wrong alignment on AWindManager_C");
static_assert(sizeof(AWindManager_C) == 0x000670, "Wrong size on AWindManager_C");
static_assert(offsetof(AWindManager_C, UberGraphFrame) == 0x0005D8, "Member 'AWindManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWindManager_C, EmptyStaticMesh) == 0x0005E0, "Member 'AWindManager_C::EmptyStaticMesh' has a wrong offset!");
static_assert(offsetof(AWindManager_C, ParticleSystem) == 0x0005E8, "Member 'AWindManager_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AWindManager_C, TopDownCaptureActorOfTheWorld) == 0x0005F0, "Member 'AWindManager_C::TopDownCaptureActorOfTheWorld' has a wrong offset!");
static_assert(offsetof(AWindManager_C, DebugParticleSystem) == 0x0005F8, "Member 'AWindManager_C::DebugParticleSystem' has a wrong offset!");
static_assert(offsetof(AWindManager_C, SceneCaptureComponent2D03) == 0x000600, "Member 'AWindManager_C::SceneCaptureComponent2D03' has a wrong offset!");
static_assert(offsetof(AWindManager_C, SceneCaptureComponent2D02) == 0x000608, "Member 'AWindManager_C::SceneCaptureComponent2D02' has a wrong offset!");
static_assert(offsetof(AWindManager_C, SceneCaptureComponent2D01) == 0x000610, "Member 'AWindManager_C::SceneCaptureComponent2D01' has a wrong offset!");
static_assert(offsetof(AWindManager_C, DefaultSceneRoot) == 0x000618, "Member 'AWindManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWindManager_C, SmallerRenderTargetOrthoWidth) == 0x000620, "Member 'AWindManager_C::SmallerRenderTargetOrthoWidth' has a wrong offset!");
static_assert(offsetof(AWindManager_C, LargestRenderTargetOrthoWidth) == 0x000624, "Member 'AWindManager_C::LargestRenderTargetOrthoWidth' has a wrong offset!");
static_assert(offsetof(AWindManager_C, MidSizedRenderTargetOrthoWidth) == 0x000628, "Member 'AWindManager_C::MidSizedRenderTargetOrthoWidth' has a wrong offset!");
static_assert(offsetof(AWindManager_C, External_Test_Actor) == 0x000630, "Member 'AWindManager_C::External_Test_Actor' has a wrong offset!");
static_assert(offsetof(AWindManager_C, DebugParticleBasedWind) == 0x000640, "Member 'AWindManager_C::DebugParticleBasedWind' has a wrong offset!");
static_assert(offsetof(AWindManager_C, World_Terrain_Meshes) == 0x000648, "Member 'AWindManager_C::World_Terrain_Meshes' has a wrong offset!");
static_assert(offsetof(AWindManager_C, Camera_Height_Offset) == 0x000658, "Member 'AWindManager_C::Camera_Height_Offset' has a wrong offset!");
static_assert(offsetof(AWindManager_C, Character_Initialized) == 0x000664, "Member 'AWindManager_C::Character_Initialized' has a wrong offset!");
static_assert(offsetof(AWindManager_C, Particle_Z_Offset) == 0x000668, "Member 'AWindManager_C::Particle_Z_Offset' has a wrong offset!");
static_assert(offsetof(AWindManager_C, Activate_Grass_Wind_And_Top_Down_Z_Depth_Texture_Renders_Of_the_World) == 0x00066C, "Member 'AWindManager_C::Activate_Grass_Wind_And_Top_Down_Z_Depth_Texture_Renders_Of_the_World' has a wrong offset!");
static_assert(offsetof(AWindManager_C, Has_Water_Interaction_Enabled_Variable_Been_Set) == 0x00066D, "Member 'AWindManager_C::Has_Water_Interaction_Enabled_Variable_Been_Set' has a wrong offset!");
static_assert(offsetof(AWindManager_C, Is_Water_Interaction_Enabled) == 0x00066E, "Member 'AWindManager_C::Is_Water_Interaction_Enabled' has a wrong offset!");

}

