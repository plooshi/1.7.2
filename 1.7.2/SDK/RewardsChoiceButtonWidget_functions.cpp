#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardsChoiceButtonWidget

#include "Basic.hpp"

#include "RewardsChoiceButtonWidget_classes.hpp"
#include "RewardsChoiceButtonWidget_parameters.hpp"


namespace SDK
{

// Function RewardsChoiceButtonWidget.RewardsChoiceButtonWidget_C.PopulateRewards
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URewardsWidget_C*                 Owner_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RewardIndex_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (Parm, OutParm, ZeroConstructor, ReferenceParm)

void URewardsChoiceButtonWidget_C::PopulateRewards(class URewardsWidget_C* Owner_0, int32 RewardIndex_0, TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsChoiceButtonWidget_C", "PopulateRewards");

	Params::RewardsChoiceButtonWidget_C_PopulateRewards Parms{};

	Parms.Owner_0 = Owner_0;
	Parms.RewardIndex_0 = RewardIndex_0;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
}


// Function RewardsChoiceButtonWidget.RewardsChoiceButtonWidget_C.OnPreviewMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply URewardsChoiceButtonWidget_C::OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsChoiceButtonWidget_C", "OnPreviewMouseButtonDown");

	Params::RewardsChoiceButtonWidget_C_OnPreviewMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RewardsChoiceButtonWidget.RewardsChoiceButtonWidget_C.SelectRewards
// (Public, BlueprintCallable, BlueprintEvent)

void URewardsChoiceButtonWidget_C::SelectRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsChoiceButtonWidget_C", "SelectRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsChoiceButtonWidget.RewardsChoiceButtonWidget_C.SetHighlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableHighlight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URewardsChoiceButtonWidget_C::SetHighlight(bool EnableHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsChoiceButtonWidget_C", "SetHighlight");

	Params::RewardsChoiceButtonWidget_C_SetHighlight Parms{};

	Parms.EnableHighlight = EnableHighlight;

	UObject::ProcessEvent(Func, &Parms);
}

}

