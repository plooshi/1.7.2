#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemHeaderWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemHeaderWidget.ItemHeaderWidget_C
// 0x0138 (0x0398 - 0x0260)
class UItemHeaderWidget_C final : public UFortItemDetailsPanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class UNamedSlot*                             AdditionalContentSlot;                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BottomCategoryIndicators;                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorderLowerSection;                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortEvolveIndicator*                   EvolveIndicator;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortFavoriteIndicator*                 FavoriteIndicator;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HeroPerks;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxLevel;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTier;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTierandLevel;                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxTierName;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             IndicatorIconSlot;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemDetailsStackCounter_C*             ItemDetailsStackCounter;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ItemDisplayNameText;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortTierIndicator*                     ItemTierIndicator;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LeadIndicators;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLevelIndicator*                    LevelIndicator;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortInventoryOverflowIndicator*        OverflowIndicator;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPerkDivider_C*                         PerkDivider;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPowerRatingBlockItemDetails_C*         PowerRatingBlock;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             PrimaryItemCategoryIndicator;                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             SecondaryItemCategoryIndicatorBottomIcon;          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             SecondaryItemCategoryIndicatorBottomText;          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             SecondaryItemCategoryIndicatorTop;                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SelectedItemDetailsOverlay;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SupportBonusText;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortHeroSupportPerkWidget_Overview_C*  SupportPerk;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortHeroSupportPerkWidget_Overview_C*  TacticalPerk;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             TertiaryItemCategoryIndicatorBottomIcon;           // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             TertiaryItemCategoryIndicatorBottomText;           // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCategoryIndicator*             TertiaryItemCategoryIndicatorTop;                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TierNameText;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          TitleBox;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TopCategoryIndicators;                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortUpgradeIndicator*                  UpgradeIndicator;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bShowHeroPerks;                                    // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShowBottomCategoryIndicators;                     // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    TargetItemDef;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowFavoriteIndicator;                             // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowOverflowIndicator;                             // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          isInGame;                                          // 0x0392(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ItemHeaderWidget(int32 EntryPoint);
	void ResetDisplay();
	void HandleDifferentItemToDetailSet();
	void PreConstruct(bool IsDesignTime);
	void HandleDifferentItemToCompareSet();
	void UpdatePowerRatingComparison();
	void UpdateHeaderColor();
	void UpdateCategoryIndicators();
	void Show_Tier_and_Level(bool Show);
	void Show_Power_Block(bool Show);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemHeaderWidget_C">();
	}
	static class UItemHeaderWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemHeaderWidget_C>();
	}
};
static_assert(alignof(UItemHeaderWidget_C) == 0x000008, "Wrong alignment on UItemHeaderWidget_C");
static_assert(sizeof(UItemHeaderWidget_C) == 0x000398, "Wrong size on UItemHeaderWidget_C");
static_assert(offsetof(UItemHeaderWidget_C, UberGraphFrame) == 0x000260, "Member 'UItemHeaderWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, AdditionalContentSlot) == 0x000268, "Member 'UItemHeaderWidget_C::AdditionalContentSlot' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, BottomCategoryIndicators) == 0x000270, "Member 'UItemHeaderWidget_C::BottomCategoryIndicators' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, CommonBorderLowerSection) == 0x000278, "Member 'UItemHeaderWidget_C::CommonBorderLowerSection' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, EvolveIndicator) == 0x000280, "Member 'UItemHeaderWidget_C::EvolveIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, FavoriteIndicator) == 0x000288, "Member 'UItemHeaderWidget_C::FavoriteIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, HeroPerks) == 0x000290, "Member 'UItemHeaderWidget_C::HeroPerks' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, HorizontalBoxLevel) == 0x000298, "Member 'UItemHeaderWidget_C::HorizontalBoxLevel' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, HorizontalBoxTier) == 0x0002A0, "Member 'UItemHeaderWidget_C::HorizontalBoxTier' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, HorizontalBoxTierandLevel) == 0x0002A8, "Member 'UItemHeaderWidget_C::HorizontalBoxTierandLevel' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, HorizontalBoxTierName) == 0x0002B0, "Member 'UItemHeaderWidget_C::HorizontalBoxTierName' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, Image_0) == 0x0002B8, "Member 'UItemHeaderWidget_C::Image_0' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, IndicatorIconSlot) == 0x0002C0, "Member 'UItemHeaderWidget_C::IndicatorIconSlot' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, ItemDetailsStackCounter) == 0x0002C8, "Member 'UItemHeaderWidget_C::ItemDetailsStackCounter' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, ItemDisplayNameText) == 0x0002D0, "Member 'UItemHeaderWidget_C::ItemDisplayNameText' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, ItemTierIndicator) == 0x0002D8, "Member 'UItemHeaderWidget_C::ItemTierIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, LeadIndicators) == 0x0002E0, "Member 'UItemHeaderWidget_C::LeadIndicators' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, LevelIndicator) == 0x0002E8, "Member 'UItemHeaderWidget_C::LevelIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, OverflowIndicator) == 0x0002F0, "Member 'UItemHeaderWidget_C::OverflowIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, PerkDivider) == 0x0002F8, "Member 'UItemHeaderWidget_C::PerkDivider' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, PowerRatingBlock) == 0x000300, "Member 'UItemHeaderWidget_C::PowerRatingBlock' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, PrimaryItemCategoryIndicator) == 0x000308, "Member 'UItemHeaderWidget_C::PrimaryItemCategoryIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, SecondaryItemCategoryIndicatorBottomIcon) == 0x000310, "Member 'UItemHeaderWidget_C::SecondaryItemCategoryIndicatorBottomIcon' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, SecondaryItemCategoryIndicatorBottomText) == 0x000318, "Member 'UItemHeaderWidget_C::SecondaryItemCategoryIndicatorBottomText' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, SecondaryItemCategoryIndicatorTop) == 0x000320, "Member 'UItemHeaderWidget_C::SecondaryItemCategoryIndicatorTop' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, SelectedItemDetailsOverlay) == 0x000328, "Member 'UItemHeaderWidget_C::SelectedItemDetailsOverlay' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, SupportBonusText) == 0x000330, "Member 'UItemHeaderWidget_C::SupportBonusText' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, SupportPerk) == 0x000338, "Member 'UItemHeaderWidget_C::SupportPerk' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TacticalPerk) == 0x000340, "Member 'UItemHeaderWidget_C::TacticalPerk' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TertiaryItemCategoryIndicatorBottomIcon) == 0x000348, "Member 'UItemHeaderWidget_C::TertiaryItemCategoryIndicatorBottomIcon' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TertiaryItemCategoryIndicatorBottomText) == 0x000350, "Member 'UItemHeaderWidget_C::TertiaryItemCategoryIndicatorBottomText' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TertiaryItemCategoryIndicatorTop) == 0x000358, "Member 'UItemHeaderWidget_C::TertiaryItemCategoryIndicatorTop' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TierNameText) == 0x000360, "Member 'UItemHeaderWidget_C::TierNameText' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TitleBox) == 0x000368, "Member 'UItemHeaderWidget_C::TitleBox' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TopCategoryIndicators) == 0x000370, "Member 'UItemHeaderWidget_C::TopCategoryIndicators' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, UpgradeIndicator) == 0x000378, "Member 'UItemHeaderWidget_C::UpgradeIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, bShowHeroPerks) == 0x000380, "Member 'UItemHeaderWidget_C::bShowHeroPerks' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, bShowBottomCategoryIndicators) == 0x000381, "Member 'UItemHeaderWidget_C::bShowBottomCategoryIndicators' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, TargetItemDef) == 0x000388, "Member 'UItemHeaderWidget_C::TargetItemDef' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, ShowFavoriteIndicator) == 0x000390, "Member 'UItemHeaderWidget_C::ShowFavoriteIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, ShowOverflowIndicator) == 0x000391, "Member 'UItemHeaderWidget_C::ShowOverflowIndicator' has a wrong offset!");
static_assert(offsetof(UItemHeaderWidget_C, isInGame) == 0x000392, "Member 'UItemHeaderWidget_C::isInGame' has a wrong offset!");

}

