#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaTabsScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function AthenaTabsScreen.AthenaTabsScreen_C.ExecuteUbergraph_AthenaTabsScreen
// 0x0020 (0x0020 - 0x0000)
struct AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_TabId2;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_TabButton;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_TabId;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen) == 0x000008, "Wrong alignment on AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen");
static_assert(sizeof(AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen) == 0x000020, "Wrong size on AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen");
static_assert(offsetof(AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen, EntryPoint) == 0x000000, "Member 'AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen, K2Node_ComponentBoundEvent_TabId2) == 0x000008, "Member 'AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen::K2Node_ComponentBoundEvent_TabId2' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen, K2Node_ComponentBoundEvent_TabButton) == 0x000010, "Member 'AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen::K2Node_ComponentBoundEvent_TabButton' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen, K2Node_ComponentBoundEvent_TabId) == 0x000018, "Member 'AthenaTabsScreen_C_ExecuteUbergraph_AthenaTabsScreen::K2Node_ComponentBoundEvent_TabId' has a wrong offset!");

// Function AthenaTabsScreen.AthenaTabsScreen_C.BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000008, "Wrong alignment on AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(sizeof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000008, "Wrong size on AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(offsetof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature, TabId) == 0x000000, "Member 'AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature::TabId' has a wrong offset!");

// Function AthenaTabsScreen.AthenaTabsScreen_C.BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature) == 0x000008, "Wrong alignment on AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature");
static_assert(sizeof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature) == 0x000010, "Wrong size on AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature");
static_assert(offsetof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature, TabId) == 0x000000, "Member 'AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature, TabButton) == 0x000008, "Member 'AthenaTabsScreen_C_BndEvt__TopTabList_K2Node_ComponentBoundEvent_0_OnTabButtonCreated__DelegateSignature::TabButton' has a wrong offset!");

// Function AthenaTabsScreen.AthenaTabsScreen_C.HandleTabCreated
// 0x0048 (0x0048 - 0x0000)
struct AthenaTabsScreen_C_HandleTabCreated final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          LocalTab;                                          // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalTabId;                                        // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconTabButton_C*                       K2Node_DynamicCast_AsIcon_Tab_Button;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0030(0x0018)()
};
static_assert(alignof(AthenaTabsScreen_C_HandleTabCreated) == 0x000008, "Wrong alignment on AthenaTabsScreen_C_HandleTabCreated");
static_assert(sizeof(AthenaTabsScreen_C_HandleTabCreated) == 0x000048, "Wrong size on AthenaTabsScreen_C_HandleTabCreated");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, TabId) == 0x000000, "Member 'AthenaTabsScreen_C_HandleTabCreated::TabId' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, TabButton) == 0x000008, "Member 'AthenaTabsScreen_C_HandleTabCreated::TabButton' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, LocalTab) == 0x000010, "Member 'AthenaTabsScreen_C_HandleTabCreated::LocalTab' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, LocalTabId) == 0x000018, "Member 'AthenaTabsScreen_C_HandleTabCreated::LocalTabId' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, K2Node_DynamicCast_AsIcon_Tab_Button) == 0x000020, "Member 'AthenaTabsScreen_C_HandleTabCreated::K2Node_DynamicCast_AsIcon_Tab_Button' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AthenaTabsScreen_C_HandleTabCreated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabCreated, CallFunc_TextToUpper_ReturnValue) == 0x000030, "Member 'AthenaTabsScreen_C_HandleTabCreated::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function AthenaTabsScreen.AthenaTabsScreen_C.HandleTabSelected
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) AthenaTabsScreen_C_HandleTabSelected final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveTab_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTabsScreen_C_HandleTabSelected) == 0x000008, "Wrong alignment on AthenaTabsScreen_C_HandleTabSelected");
static_assert(sizeof(AthenaTabsScreen_C_HandleTabSelected) == 0x000010, "Wrong size on AthenaTabsScreen_C_HandleTabSelected");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabSelected, TabName) == 0x000000, "Member 'AthenaTabsScreen_C_HandleTabSelected::TabName' has a wrong offset!");
static_assert(offsetof(AthenaTabsScreen_C_HandleTabSelected, CallFunc_GetActiveTab_ReturnValue) == 0x000008, "Member 'AthenaTabsScreen_C_HandleTabSelected::CallFunc_GetActiveTab_ReturnValue' has a wrong offset!");

}

