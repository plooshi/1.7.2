#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_ListRewards

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C
// 0x00D8 (0x0338 - 0x0260)
class UFrontEndRewards_ListRewards_C final : public UFortRewardNotificationSubWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowHideDescription;                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOutro;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       RibbonExpand;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 arrow_left;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 arrow_right;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasCardQueue;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 dots_margin;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayMain;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBoxDescription;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxDescription;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextBlockHeader;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextDescriptionHeader;                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextDescriptionSummary;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class URewards_ItemCard_C*>            CardList;                                          // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         CurrentSelectionIndex;                             // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CardSlideStaggerDelay;                             // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBusy;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         cardOffset;                                        // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    ScrollAction;                                      // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CollectAllAction;                                  // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    InspectAction;                                     // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           TransitionInHandle;                                // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         TransitionInStaggerDelay;                          // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TransitionInIndex;                                 // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTransitioningIn;                                 // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_FrontEndRewards_ListRewards(int32 EntryPoint);
	void OnPrimaryAction();
	void OnDeactivated();
	void OnActivated();
	void OnNavigationRight();
	void OnNavigationLeft();
	void TransitionOutBegin();
	void TransitionInBegin();
	void Construct();
	void DelayedCheckScroll();
	void PreConstruct(bool IsDesignTime);
	void InitDesignView();
	void AddCard(class URewards_ItemCard_C* Card);
	void SelectNextCard();
	void GetCardAlignment(int32 CardQueueIndex, int32 CardListIndex, struct FVector2D* Alignment, struct FAnchors* Anchors, float* Scale, float* Offset, float* Angle, struct FVector2D* Translation, float* DropShadowDepth);
	void HandleLastSlideAnimFinished(class URewards_ItemCard_C* RewardsItemCard);
	void SelectPreviousCard();
	void SetCardAlignment(class UWidget* CardWidget, int32 SelectionIndex);
	void SetItemDescription();
	void PlayCardSlide(class URewards_ItemCard_C* RewardsItemCard, float StaggerDelay);
	void ClearCards();
	void HandleCardClicked(class URewards_ItemCard_C* Card);
	void SetCardSelected(class URewards_ItemCard_C* Card);
	void SelectCard(int32 InNewIndex);
	void HandleOutroAnimFinished();
	void HandleLastPopInFinished();
	void SetArrowVisibility();
	void HandleCollectAllAction(bool* Committed);
	void HandleScrollAction(bool* Committed);
	void HandleInspectAction(bool* Committed);
	void PopulateFromCardsList(TArray<class URewards_ItemCard_C*>& Cards);
	void EnableInputActions();
	void DisableInputActions();
	void AddInputActions();
	void Reset();
	void HandleTransitionInComplete();
	void BindEvents();
	void TickTransitionIn();
	void SkipTransitionIn();
	void Clear_DisplayName_and_Description_Widgets();
	void Set_DisplayName_and_Description_Widget(class UFortItem* Item, const class FText& Description);
	bool Get_Item_Description(class UFortItem* Object, class FText* OutDescription);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FrontEndRewards_ListRewards_C">();
	}
	static class UFrontEndRewards_ListRewards_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFrontEndRewards_ListRewards_C>();
	}
};
static_assert(alignof(UFrontEndRewards_ListRewards_C) == 0x000008, "Wrong alignment on UFrontEndRewards_ListRewards_C");
static_assert(sizeof(UFrontEndRewards_ListRewards_C) == 0x000338, "Wrong size on UFrontEndRewards_ListRewards_C");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, UberGraphFrame) == 0x000260, "Member 'UFrontEndRewards_ListRewards_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, ShowHideDescription) == 0x000268, "Member 'UFrontEndRewards_ListRewards_C::ShowHideDescription' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, AnimOutro) == 0x000270, "Member 'UFrontEndRewards_ListRewards_C::AnimOutro' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, RibbonExpand) == 0x000278, "Member 'UFrontEndRewards_ListRewards_C::RibbonExpand' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, arrow_left) == 0x000280, "Member 'UFrontEndRewards_ListRewards_C::arrow_left' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, arrow_right) == 0x000288, "Member 'UFrontEndRewards_ListRewards_C::arrow_right' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, CanvasCardQueue) == 0x000290, "Member 'UFrontEndRewards_ListRewards_C::CanvasCardQueue' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, dots_margin) == 0x000298, "Member 'UFrontEndRewards_ListRewards_C::dots_margin' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, OverlayMain) == 0x0002A0, "Member 'UFrontEndRewards_ListRewards_C::OverlayMain' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, ScrollBoxDescription) == 0x0002A8, "Member 'UFrontEndRewards_ListRewards_C::ScrollBoxDescription' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, SizeBoxDescription) == 0x0002B0, "Member 'UFrontEndRewards_ListRewards_C::SizeBoxDescription' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, TextBlockHeader) == 0x0002B8, "Member 'UFrontEndRewards_ListRewards_C::TextBlockHeader' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, TextDescriptionHeader) == 0x0002C0, "Member 'UFrontEndRewards_ListRewards_C::TextDescriptionHeader' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, TextDescriptionSummary) == 0x0002C8, "Member 'UFrontEndRewards_ListRewards_C::TextDescriptionSummary' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, CardList) == 0x0002D0, "Member 'UFrontEndRewards_ListRewards_C::CardList' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, CurrentSelectionIndex) == 0x0002E0, "Member 'UFrontEndRewards_ListRewards_C::CurrentSelectionIndex' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, CardSlideStaggerDelay) == 0x0002E4, "Member 'UFrontEndRewards_ListRewards_C::CardSlideStaggerDelay' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, IsBusy) == 0x0002E8, "Member 'UFrontEndRewards_ListRewards_C::IsBusy' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, cardOffset) == 0x0002EC, "Member 'UFrontEndRewards_ListRewards_C::cardOffset' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, ScrollAction) == 0x0002F0, "Member 'UFrontEndRewards_ListRewards_C::ScrollAction' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, CollectAllAction) == 0x000300, "Member 'UFrontEndRewards_ListRewards_C::CollectAllAction' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, InspectAction) == 0x000310, "Member 'UFrontEndRewards_ListRewards_C::InspectAction' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, TransitionInHandle) == 0x000320, "Member 'UFrontEndRewards_ListRewards_C::TransitionInHandle' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, TransitionInStaggerDelay) == 0x000328, "Member 'UFrontEndRewards_ListRewards_C::TransitionInStaggerDelay' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, TransitionInIndex) == 0x00032C, "Member 'UFrontEndRewards_ListRewards_C::TransitionInIndex' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_ListRewards_C, IsTransitioningIn) == 0x000330, "Member 'UFrontEndRewards_ListRewards_C::IsTransitioningIn' has a wrong offset!");

}

