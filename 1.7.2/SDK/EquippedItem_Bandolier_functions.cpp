#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquippedItem_Bandolier

#include "Basic.hpp"

#include "EquippedItem_Bandolier_classes.hpp"
#include "EquippedItem_Bandolier_parameters.hpp"


namespace SDK
{

// Function EquippedItem-Bandolier.EquippedItem-Bandolier_C.UpdateCurrent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortAmmoItemDefinition*          AmmoData                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEquippedItem_Bandolier_C::UpdateCurrent(int32 Current, class UFortAmmoItemDefinition* AmmoData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquippedItem-Bandolier_C", "UpdateCurrent");

	Params::EquippedItem_Bandolier_C_UpdateCurrent Parms{};

	Parms.Current = Current;
	Parms.AmmoData = AmmoData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EquippedItem-Bandolier.EquippedItem-Bandolier_C.UpdateCapacity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Capacity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortAmmoItemDefinition*          AmmoData                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEquippedItem_Bandolier_C::UpdateCapacity(int32 Capacity, class UFortAmmoItemDefinition* AmmoData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquippedItem-Bandolier_C", "UpdateCapacity");

	Params::EquippedItem_Bandolier_C_UpdateCapacity Parms{};

	Parms.Capacity = Capacity;
	Parms.AmmoData = AmmoData;

	UObject::ProcessEvent(Func, &Parms);
}

}

