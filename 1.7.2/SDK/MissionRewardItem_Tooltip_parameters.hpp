#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionRewardItem_Tooltip

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Reward Name
// 0x0070 (0x0070 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Reward_Name final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   Reward_Name;                                       // 0x0018(0x0018)(Edit)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0058(0x0018)()
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Reward_Name) == 0x000008, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Reward_Name");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Reward_Name) == 0x000070, "Wrong size on MissionRewardItem_Tooltip_C_Get_Reward_Name");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, Reward_Name) == 0x000018, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::Reward_Name' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, Temp_bool_Variable) == 0x000030, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, CallFunc_TextIsEmpty_ReturnValue) == 0x000051, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Name, K2Node_Select_Default) == 0x000058, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Name::K2Node_Select_Default' has a wrong offset!");

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Reward Icon
// 0x01B8 (0x01B8 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Reward_Icon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0090)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            Reward_Icon;                                       // 0x0090(0x0090)(Edit)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetItemSmallPreviewImageBrush_ReturnValue; // 0x0128(0x0090)()
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Reward_Icon) == 0x000008, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Reward_Icon");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Reward_Icon) == 0x0001B8, "Wrong size on MissionRewardItem_Tooltip_C_Get_Reward_Icon");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, Reward_Icon) == 0x000090, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::Reward_Icon' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Reward_Icon, CallFunc_GetItemSmallPreviewImageBrush_ReturnValue) == 0x000128, "Member 'MissionRewardItem_Tooltip_C_Get_Reward_Icon::CallFunc_GetItemSmallPreviewImageBrush_ReturnValue' has a wrong offset!");

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Rarity Color
// 0x00A8 (0x00A8 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Rarity_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RarityColor;                                       // 0x0010(0x0010)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0028(0x0080)()
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Rarity_Color) == 0x000008, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Rarity_Color");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Rarity_Color) == 0x0000A8, "Wrong size on MissionRewardItem_Tooltip_C_Get_Rarity_Color");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, RarityColor) == 0x000010, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::RarityColor' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, CallFunc_GetRarity_ReturnValue) == 0x000021, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color, CallFunc_BPGetRarityData_ReturnValue) == 0x000028, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");

// Function MissionRewardItem-Tooltip.MissionRewardItem-Tooltip_C.Get Rarity Color (SlateColor)
// 0x0060 (0x0060 - 0x0000)
struct MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_ final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FLinearColor                           CallFunc_Get_Rarity_Color_ReturnValue;             // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
};
static_assert(alignof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_) == 0x000008, "Wrong alignment on MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_");
static_assert(sizeof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_) == 0x000060, "Wrong size on MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_, ReturnValue) == 0x000000, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_::ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_, CallFunc_Get_Rarity_Color_ReturnValue) == 0x000028, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_::CallFunc_Get_Rarity_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'MissionRewardItem_Tooltip_C_Get_Rarity_Color__SlateColor_::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

