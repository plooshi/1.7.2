#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemManagementScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemManagementScreen.ItemManagementScreen_C
// 0x0020 (0x0730 - 0x0710)
class UItemManagementScreen_C final : public UFortItemManagementScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0710(0x0008)(Transient, DuplicateTransient)
	class USizeBox*                               SizeBox_Inventory;                                 // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ItemDragEnabled;                                   // 0x0720(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemManagementItemTileButton*      SelectedSchematicTileButton;                       // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemManagementScreen(int32 EntryPoint);
	void HandleInspectItemBP(class UFortItem* Item);
	void OnActivated();
	void HandleConsumeItemBP(class UFortConsumableAccountItem* ConsumableItem);
	void CraftabilityRefresh();
	void HandleCraftItemBP(class UFortSchematicItem* SchematicItem);
	void HandleEquipItemBP(class UFortItem* Item);
	void HandleDifferentItemManagementModeSetBP();
	void OnMCPRequestComplete_D020DD864A3EFC9A31973C87076269CA();
	void DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40(EFortDialogResult Result, class FName ResultName);
	void HandleClose();
	void HandleInspect(class UFortItem* ItemToInspect, bool* PassThrough);
	void GetDescriptionText(class FText* ItemDescription);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void SizeInventoryPanel();
	void HandleEquip(class UFortItem* ItemToEquip, bool* PassThrough);
	void CraftAndSlot(class UFortSchematicItem* SchematicItem);
	void ShowCraftError(EFortCraftFailCause FailCause);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemManagementScreen_C">();
	}
	static class UItemManagementScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemManagementScreen_C>();
	}
};
static_assert(alignof(UItemManagementScreen_C) == 0x000008, "Wrong alignment on UItemManagementScreen_C");
static_assert(sizeof(UItemManagementScreen_C) == 0x000730, "Wrong size on UItemManagementScreen_C");
static_assert(offsetof(UItemManagementScreen_C, UberGraphFrame) == 0x000710, "Member 'UItemManagementScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemManagementScreen_C, SizeBox_Inventory) == 0x000718, "Member 'UItemManagementScreen_C::SizeBox_Inventory' has a wrong offset!");
static_assert(offsetof(UItemManagementScreen_C, ItemDragEnabled) == 0x000720, "Member 'UItemManagementScreen_C::ItemDragEnabled' has a wrong offset!");
static_assert(offsetof(UItemManagementScreen_C, SelectedSchematicTileButton) == 0x000728, "Member 'UItemManagementScreen_C::SelectedSchematicTileButton' has a wrong offset!");

}

