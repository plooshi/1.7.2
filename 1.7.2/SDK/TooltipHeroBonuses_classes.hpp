#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TooltipHeroBonuses

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TooltipHeroBonuses.TooltipHeroBonuses_C
// 0x0050 (0x0280 - 0x0230)
class UTooltipHeroBonuses_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBoxBonusContainer;                       // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextHeroBonuses;                                   // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBoxBonusContainer;                         // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_HeroSquadBonusesOrientation;        // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortHero*                              Hero;                                              // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Comparison;                                        // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          PanelMode;                                         // 0x0261(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortUIPerk>                    PerkSet;                                           // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          UseVerticalDisplayFormat;                          // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_TooltipHeroBonuses(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TooltipHeroBonuses_C">();
	}
	static class UTooltipHeroBonuses_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTooltipHeroBonuses_C>();
	}
};
static_assert(alignof(UTooltipHeroBonuses_C) == 0x000008, "Wrong alignment on UTooltipHeroBonuses_C");
static_assert(sizeof(UTooltipHeroBonuses_C) == 0x000280, "Wrong size on UTooltipHeroBonuses_C");
static_assert(offsetof(UTooltipHeroBonuses_C, UberGraphFrame) == 0x000230, "Member 'UTooltipHeroBonuses_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, HorizontalBoxBonusContainer) == 0x000238, "Member 'UTooltipHeroBonuses_C::HorizontalBoxBonusContainer' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, TextHeroBonuses) == 0x000240, "Member 'UTooltipHeroBonuses_C::TextHeroBonuses' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, VerticalBoxBonusContainer) == 0x000248, "Member 'UTooltipHeroBonuses_C::VerticalBoxBonusContainer' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, WidgetSwitcher_HeroSquadBonusesOrientation) == 0x000250, "Member 'UTooltipHeroBonuses_C::WidgetSwitcher_HeroSquadBonusesOrientation' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, Hero) == 0x000258, "Member 'UTooltipHeroBonuses_C::Hero' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, Comparison) == 0x000260, "Member 'UTooltipHeroBonuses_C::Comparison' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, PanelMode) == 0x000261, "Member 'UTooltipHeroBonuses_C::PanelMode' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, PerkSet) == 0x000268, "Member 'UTooltipHeroBonuses_C::PerkSet' has a wrong offset!");
static_assert(offsetof(UTooltipHeroBonuses_C, UseVerticalDisplayFormat) == 0x000278, "Member 'UTooltipHeroBonuses_C::UseVerticalDisplayFormat' has a wrong offset!");

}

