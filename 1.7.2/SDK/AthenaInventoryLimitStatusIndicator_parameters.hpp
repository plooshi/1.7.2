#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryLimitStatusIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.ExecuteUbergraph_AthenaInventoryLimitStatusIndicator
// 0x0040 (0x0040 - 0x0000)
struct AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsAdded;                     // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsRemoved;                   // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator) == 0x000008, "Wrong alignment on AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator");
static_assert(sizeof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator) == 0x000040, "Wrong size on AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator, EntryPoint) == 0x000000, "Member 'AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator, K2Node_CustomEvent_ItemsAdded) == 0x000008, "Member 'AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator::K2Node_CustomEvent_ItemsAdded' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator, K2Node_CustomEvent_ItemsRemoved) == 0x000018, "Member 'AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator::K2Node_CustomEvent_ItemsRemoved' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'AthenaInventoryLimitStatusIndicator_C_ExecuteUbergraph_AthenaInventoryLimitStatusIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.HandleWorldItemListChanged
// 0x0020 (0x0020 - 0x0000)
struct AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged final
{
public:
	TArray<class UFortWorldItem*>                 ItemsAdded;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 ItemsRemoved;                                      // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged) == 0x000008, "Wrong alignment on AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged");
static_assert(sizeof(AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged) == 0x000020, "Wrong size on AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged, ItemsAdded) == 0x000000, "Member 'AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged::ItemsAdded' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged, ItemsRemoved) == 0x000010, "Member 'AthenaInventoryLimitStatusIndicator_C_HandleWorldItemListChanged::ItemsRemoved' has a wrong offset!");

// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.TrackWorldInventory
// 0x0018 (0x0018 - 0x0000)
struct AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory final
{
public:
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory) == 0x000008, "Wrong alignment on AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory");
static_assert(sizeof(AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory) == 0x000018, "Wrong size on AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'AthenaInventoryLimitStatusIndicator_C_TrackWorldInventory::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function AthenaInventoryLimitStatusIndicator.AthenaInventoryLimitStatusIndicator_C.RefreshWorldInventoryStatus
// 0x0180 (0x0180 - 0x0000)
struct AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus final
{
public:
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0000(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Theme_Color_Theme_Color;              // 0x0020(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBackpackItemCounts_ItemsCount;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBackpackItemCounts_MaxItemsCount;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBackpackItemCounts_OverflowItemsCount; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Theme_Color_Theme_Color2;             // 0x003C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0108(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0134(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select2_Default;                            // 0x0144(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0158(0x0028)()
};
static_assert(alignof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus) == 0x000008, "Wrong alignment on AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus");
static_assert(sizeof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus) == 0x000180, "Wrong size on AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, Temp_struct_Variable) == 0x000000, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, Temp_bool_Variable) == 0x000010, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Get_Theme_Color_Theme_Color) == 0x000020, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Get_Theme_Color_Theme_Color' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_GetBackpackItemCounts_ItemsCount) == 0x000030, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_GetBackpackItemCounts_ItemsCount' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_GetBackpackItemCounts_MaxItemsCount) == 0x000034, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_GetBackpackItemCounts_MaxItemsCount' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_GetBackpackItemCounts_OverflowItemsCount) == 0x000038, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_GetBackpackItemCounts_OverflowItemsCount' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Get_Theme_Color_Theme_Color2) == 0x00003C, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Get_Theme_Color_Theme_Color2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_MakeStruct_FormatArgumentData2) == 0x000090, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_MakeArray_Array) == 0x0000D0, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_MakeArray_Array2) == 0x0000E0, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Format_ReturnValue2) == 0x000108, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000120, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000124, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_FMax_ReturnValue) == 0x000128, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00012C, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Less_FloatFloat_ReturnValue) == 0x000130, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, CallFunc_Less_FloatFloat_ReturnValue2) == 0x000131, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, Temp_bool_Variable2) == 0x000132, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_Select_Default) == 0x000134, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_Select2_Default) == 0x000144, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus, K2Node_MakeStruct_SlateColor) == 0x000158, "Member 'AthenaInventoryLimitStatusIndicator_C_RefreshWorldInventoryStatus::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

