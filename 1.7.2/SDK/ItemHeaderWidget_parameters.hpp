#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemHeaderWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ItemHeaderWidget.ItemHeaderWidget_C.ExecuteUbergraph_ItemHeaderWidget
// 0x0180 (0x0180 - 0x0000)
struct ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0018)()
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortSchematicItemDefinition*           K2Node_DynamicCast_AsFort_Schematic_Item_Definition; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSchematicItem*                     K2Node_DynamicCast_AsFort_Schematic_Item;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               CallFunc_GetResultWorldItemDefinition_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              K2Node_DynamicCast_AsFort_Hero;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWeaponItemDefinition*              K2Node_DynamicCast_AsFort_Weapon_Item_Definition;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayTierAsText_ReturnValue;         // 0x0078(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0090(0x0018)()
	bool                                          Temp_bool_Variable2;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x00B0(0x0080)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0130(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0140(0x0028)()
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRating_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_177[0x1];                                      // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select3_Default;                            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget) == 0x000008, "Wrong alignment on ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget");
static_assert(sizeof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget) == 0x000180, "Wrong size on ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, EntryPoint) == 0x000000, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000020, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_AsFort_Schematic_Item_Definition) == 0x000028, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_AsFort_Schematic_Item_Definition' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_AsFort_Schematic_Item) == 0x000038, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_AsFort_Schematic_Item' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetResultWorldItemDefinition_ReturnValue) == 0x000048, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetResultWorldItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_AsFort_Hero) == 0x000058, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_AsFort_Hero' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_IsValid_ReturnValue2) == 0x000061, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_byte_Variable) == 0x000062, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_Event_IsDesignTime) == 0x000063, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_byte_Variable2) == 0x000064, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_bool_Variable) == 0x000065, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_byte_Variable3) == 0x000066, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_AsFort_Weapon_Item_Definition) == 0x000068, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_AsFort_Weapon_Item_Definition' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_DynamicCast_bSuccess4) == 0x000070, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000071, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetDisplayTierAsText_ReturnValue) == 0x000078, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetDisplayTierAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_TextToUpper_ReturnValue) == 0x000090, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_bool_Variable2) == 0x0000A8, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetRarity_ReturnValue) == 0x0000A9, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_BPGetRarityData_ReturnValue) == 0x0000B0, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_MakeStruct_LinearColor) == 0x000130, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_MakeStruct_SlateColor) == 0x000140, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_byte_Variable4) == 0x000168, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_bool_Variable3) == 0x000169, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_bool_Variable4) == 0x00016A, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetRating_ReturnValue) == 0x00016C, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetRating_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000170, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_Select_Default) == 0x000171, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetType_ReturnValue) == 0x000172, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000173, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_Select2_Default) == 0x000174, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_byte_Variable5) == 0x000175, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, Temp_byte_Variable6) == 0x000176, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, CallFunc_GetNumInStack_ReturnValue) == 0x000178, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget, K2Node_Select3_Default) == 0x00017C, "Member 'ItemHeaderWidget_C_ExecuteUbergraph_ItemHeaderWidget::K2Node_Select3_Default' has a wrong offset!");

// Function ItemHeaderWidget.ItemHeaderWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ItemHeaderWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemHeaderWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ItemHeaderWidget_C_PreConstruct");
static_assert(sizeof(ItemHeaderWidget_C_PreConstruct) == 0x000001, "Wrong size on ItemHeaderWidget_C_PreConstruct");
static_assert(offsetof(ItemHeaderWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ItemHeaderWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ItemHeaderWidget.ItemHeaderWidget_C.UpdatePowerRatingComparison
// 0x0008 (0x0008 - 0x0000)
struct ItemHeaderWidget_C_UpdatePowerRatingComparison final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRating_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemHeaderWidget_C_UpdatePowerRatingComparison) == 0x000004, "Wrong alignment on ItemHeaderWidget_C_UpdatePowerRatingComparison");
static_assert(sizeof(ItemHeaderWidget_C_UpdatePowerRatingComparison) == 0x000008, "Wrong size on ItemHeaderWidget_C_UpdatePowerRatingComparison");
static_assert(offsetof(ItemHeaderWidget_C_UpdatePowerRatingComparison, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ItemHeaderWidget_C_UpdatePowerRatingComparison::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdatePowerRatingComparison, CallFunc_GetRating_ReturnValue) == 0x000004, "Member 'ItemHeaderWidget_C_UpdatePowerRatingComparison::CallFunc_GetRating_ReturnValue' has a wrong offset!");

// Function ItemHeaderWidget.ItemHeaderWidget_C.UpdateHeaderColor
// 0x0090 (0x0090 - 0x0000)
struct ItemHeaderWidget_C_UpdateHeaderColor final
{
public:
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0010(0x0080)()
};
static_assert(alignof(ItemHeaderWidget_C_UpdateHeaderColor) == 0x000008, "Wrong alignment on ItemHeaderWidget_C_UpdateHeaderColor");
static_assert(sizeof(ItemHeaderWidget_C_UpdateHeaderColor) == 0x000090, "Wrong size on ItemHeaderWidget_C_UpdateHeaderColor");
static_assert(offsetof(ItemHeaderWidget_C_UpdateHeaderColor, CallFunc_GetRarity_ReturnValue) == 0x000000, "Member 'ItemHeaderWidget_C_UpdateHeaderColor::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateHeaderColor, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'ItemHeaderWidget_C_UpdateHeaderColor::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateHeaderColor, CallFunc_BPGetRarityData_ReturnValue) == 0x000010, "Member 'ItemHeaderWidget_C_UpdateHeaderColor::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");

// Function ItemHeaderWidget.ItemHeaderWidget_C.UpdateCategoryIndicators
// 0x0038 (0x0038 - 0x0000)
struct ItemHeaderWidget_C_UpdateCategoryIndicators final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHero*                              K2Node_DynamicCast_AsFort_Hero;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorkerType*                        K2Node_DynamicCast_AsFort_Worker_Type;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemHeaderWidget_C_UpdateCategoryIndicators) == 0x000008, "Wrong alignment on ItemHeaderWidget_C_UpdateCategoryIndicators");
static_assert(sizeof(ItemHeaderWidget_C_UpdateCategoryIndicators) == 0x000038, "Wrong size on ItemHeaderWidget_C_UpdateCategoryIndicators");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, Temp_byte_Variable) == 0x000000, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, Temp_byte_Variable2) == 0x000001, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, Temp_bool_Variable) == 0x000003, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, K2Node_Select_Default) == 0x000004, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, Temp_byte_Variable3) == 0x000005, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, Temp_byte_Variable4) == 0x000006, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, Temp_bool_Variable2) == 0x000007, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, CallFunc_IsValid_ReturnValue2) == 0x000008, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, K2Node_Select2_Default) == 0x000009, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000010, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, K2Node_DynamicCast_AsFort_Hero) == 0x000018, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::K2Node_DynamicCast_AsFort_Hero' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, K2Node_DynamicCast_AsFort_Worker_Type) == 0x000028, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::K2Node_DynamicCast_AsFort_Worker_Type' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_UpdateCategoryIndicators, K2Node_DynamicCast_bSuccess2) == 0x000030, "Member 'ItemHeaderWidget_C_UpdateCategoryIndicators::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function ItemHeaderWidget.ItemHeaderWidget_C.Show Tier and Level
// 0x0005 (0x0005 - 0x0000)
struct ItemHeaderWidget_C_Show_Tier_and_Level final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemHeaderWidget_C_Show_Tier_and_Level) == 0x000001, "Wrong alignment on ItemHeaderWidget_C_Show_Tier_and_Level");
static_assert(sizeof(ItemHeaderWidget_C_Show_Tier_and_Level) == 0x000005, "Wrong size on ItemHeaderWidget_C_Show_Tier_and_Level");
static_assert(offsetof(ItemHeaderWidget_C_Show_Tier_and_Level, Show) == 0x000000, "Member 'ItemHeaderWidget_C_Show_Tier_and_Level::Show' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Tier_and_Level, Temp_bool_Variable) == 0x000001, "Member 'ItemHeaderWidget_C_Show_Tier_and_Level::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Tier_and_Level, Temp_byte_Variable) == 0x000002, "Member 'ItemHeaderWidget_C_Show_Tier_and_Level::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Tier_and_Level, Temp_byte_Variable2) == 0x000003, "Member 'ItemHeaderWidget_C_Show_Tier_and_Level::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Tier_and_Level, K2Node_Select_Default) == 0x000004, "Member 'ItemHeaderWidget_C_Show_Tier_and_Level::K2Node_Select_Default' has a wrong offset!");

// Function ItemHeaderWidget.ItemHeaderWidget_C.Show Power Block
// 0x0005 (0x0005 - 0x0000)
struct ItemHeaderWidget_C_Show_Power_Block final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemHeaderWidget_C_Show_Power_Block) == 0x000001, "Wrong alignment on ItemHeaderWidget_C_Show_Power_Block");
static_assert(sizeof(ItemHeaderWidget_C_Show_Power_Block) == 0x000005, "Wrong size on ItemHeaderWidget_C_Show_Power_Block");
static_assert(offsetof(ItemHeaderWidget_C_Show_Power_Block, Show) == 0x000000, "Member 'ItemHeaderWidget_C_Show_Power_Block::Show' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Power_Block, Temp_bool_Variable) == 0x000001, "Member 'ItemHeaderWidget_C_Show_Power_Block::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Power_Block, Temp_byte_Variable) == 0x000002, "Member 'ItemHeaderWidget_C_Show_Power_Block::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Power_Block, Temp_byte_Variable2) == 0x000003, "Member 'ItemHeaderWidget_C_Show_Power_Block::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemHeaderWidget_C_Show_Power_Block, K2Node_Select_Default) == 0x000004, "Member 'ItemHeaderWidget_C_Show_Power_Block::K2Node_Select_Default' has a wrong offset!");

}

