#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardsWidget

#include "Basic.hpp"

#include "RewardsWidget_classes.hpp"
#include "RewardsWidget_parameters.hpp"


namespace SDK
{

// Function RewardsWidget.RewardsWidget_C.ExecuteUbergraph_RewardsWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::ExecuteUbergraph_RewardsWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "ExecuteUbergraph_RewardsWidget");

	Params::RewardsWidget_C_ExecuteUbergraph_RewardsWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.HandleSkipOpenEvent
// (BlueprintCallable, BlueprintEvent)

void URewardsWidget_C::HandleSkipOpenEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "HandleSkipOpenEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.HandleImageClickedEvent
// (BlueprintCallable, BlueprintEvent)

void URewardsWidget_C::HandleImageClickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "HandleImageClickedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.BndEvt__OpenChestButton_K2Node_ComponentBoundEvent_234_FortBaseButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UFortBaseButton*                  Button                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::BndEvt__OpenChestButton_K2Node_ComponentBoundEvent_234_FortBaseButtonClicked__DelegateSignature(class UFortBaseButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "BndEvt__OpenChestButton_K2Node_ComponentBoundEvent_234_FortBaseButtonClicked__DelegateSignature");

	Params::RewardsWidget_C_BndEvt__OpenChestButton_K2Node_ComponentBoundEvent_234_FortBaseButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.HandleClientEvent_ConversationFinished
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          EventSource                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)

void URewardsWidget_C::HandleClientEvent_ConversationFinished(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "HandleClientEvent_ConversationFinished");

	Params::RewardsWidget_C_HandleClientEvent_ConversationFinished Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URewardsWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.SetQuest
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::SetQuest(const class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "SetQuest");

	Params::RewardsWidget_C_SetQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.BndEvt__ButtonIconText_C_0_K2Node_ComponentBoundEvent_70_FortBaseButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UFortBaseButton*                  Button                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::BndEvt__ButtonIconText_C_0_K2Node_ComponentBoundEvent_70_FortBaseButtonClicked__DelegateSignature(class UFortBaseButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "BndEvt__ButtonIconText_C_0_K2Node_ComponentBoundEvent_70_FortBaseButtonClicked__DelegateSignature");

	Params::RewardsWidget_C_BndEvt__ButtonIconText_C_0_K2Node_ComponentBoundEvent_70_FortBaseButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URewardsWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.BndEvt__ButtonIconText_K2Node_ComponentBoundEvent_377_FortBaseButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UFortBaseButton*                  Button                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::BndEvt__ButtonIconText_K2Node_ComponentBoundEvent_377_FortBaseButtonClicked__DelegateSignature(class UFortBaseButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "BndEvt__ButtonIconText_K2Node_ComponentBoundEvent_377_FortBaseButtonClicked__DelegateSignature");

	Params::RewardsWidget_C_BndEvt__ButtonIconText_K2Node_ComponentBoundEvent_377_FortBaseButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.PopulateFromQuest
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::PopulateFromQuest(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "PopulateFromQuest");

	Params::RewardsWidget_C_PopulateFromQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.PopulateQuestUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RewardSelect                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URewardsWidget_C::PopulateQuestUI(const class UFortQuestItem* Quest, bool RewardSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "PopulateQuestUI");

	Params::RewardsWidget_C_PopulateQuestUI Parms{};

	Parms.Quest = Quest;
	Parms.RewardSelect = RewardSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.PopulateFromQuestWithRewards
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (Parm, OutParm, ZeroConstructor, ReferenceParm)

void URewardsWidget_C::PopulateFromQuestWithRewards(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "PopulateFromQuestWithRewards");

	Params::RewardsWidget_C_PopulateFromQuestWithRewards Parms{};

	Parms.Quest = Quest;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
}


// Function RewardsWidget.RewardsWidget_C.SetupUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardType                             RewardType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::SetupUI(ERewardType RewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "SetupUI");

	Params::RewardsWidget_C_SetupUI Parms{};

	Parms.RewardType = RewardType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.PopulateMissionUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortLastMissionInfo             Mission                                                (Parm)

void URewardsWidget_C::PopulateMissionUI(const struct FFortLastMissionInfo& Mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "PopulateMissionUI");

	Params::RewardsWidget_C_PopulateMissionUI Parms{};

	Parms.Mission = std::move(Mission);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.PopulateFromMissionWithRewards
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortLastMissionInfo             LastMissionInfo                                        (Parm)
// TArray<struct FFortItemInstanceQuantityPair>MissionRewards                                         (Parm, OutParm, ZeroConstructor, ReferenceParm)

void URewardsWidget_C::PopulateFromMissionWithRewards(const struct FFortLastMissionInfo& LastMissionInfo, TArray<struct FFortItemInstanceQuantityPair>& MissionRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "PopulateFromMissionWithRewards");

	Params::RewardsWidget_C_PopulateFromMissionWithRewards Parms{};

	Parms.LastMissionInfo = std::move(LastMissionInfo);
	Parms.MissionRewards = std::move(MissionRewards);

	UObject::ProcessEvent(Func, &Parms);

	MissionRewards = std::move(Parms.MissionRewards);
}


// Function RewardsWidget.RewardsWidget_C.SelectText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm)
// class FText                             Default                                                (Parm)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText URewardsWidget_C::SelectText(const class FText& InText, const class FText& Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "SelectText");

	Params::RewardsWidget_C_SelectText Parms{};

	Parms.InText = std::move(InText);
	Parms.Default = std::move(Default);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RewardsWidget.RewardsWidget_C.GetChestImage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       MissionIcon                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::GetChestImage(class UTexture2D** MissionIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "GetChestImage");

	Params::RewardsWidget_C_GetChestImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MissionIcon != nullptr)
		*MissionIcon = Parms.MissionIcon;
}


// Function RewardsWidget.RewardsWidget_C.OnConversationEnded
// (Public, BlueprintCallable, BlueprintEvent)

void URewardsWidget_C::OnConversationEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "OnConversationEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.PlayQuestConversation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortConversation*                Conversation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::PlayQuestConversation(class UFortConversation* Conversation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "PlayQuestConversation");

	Params::RewardsWidget_C_PlayQuestConversation Parms{};

	Parms.Conversation = Conversation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.SelectRewards
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RewardIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::SelectRewards(int32 RewardIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "SelectRewards");

	Params::RewardsWidget_C_SelectRewards Parms{};

	Parms.RewardIndex = RewardIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.CreateRewardChoice
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   RewardIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRewardSelection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URewardsWidget_C::CreateRewardChoice(TArray<struct FFortItemInstanceQuantityPair>& Rewards, int32 RewardIndex, bool IsRewardSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "CreateRewardChoice");

	Params::RewardsWidget_C_CreateRewardChoice Parms{};

	Parms.Rewards = std::move(Rewards);
	Parms.RewardIndex = RewardIndex;
	Parms.IsRewardSelection = IsRewardSelection;

	UObject::ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
}


// Function RewardsWidget.RewardsWidget_C.SetupQuestRewardsChoice
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::SetupQuestRewardsChoice(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "SetupQuestRewardsChoice");

	Params::RewardsWidget_C_SetupQuestRewardsChoice Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardsWidget.RewardsWidget_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void URewardsWidget_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.TerminateQuestConverstation
// (Public, BlueprintCallable, BlueprintEvent)

void URewardsWidget_C::TerminateQuestConverstation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "TerminateQuestConverstation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsWidget.RewardsWidget_C.GetClosedChestImage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       ChestImage                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsWidget_C::GetClosedChestImage(class UTexture2D** ChestImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "GetClosedChestImage");

	Params::RewardsWidget_C_GetClosedChestImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChestImage != nullptr)
		*ChestImage = Parms.ChestImage;
}


// Function RewardsWidget.RewardsWidget_C.On_ClosedChest_MouseButtonDown_1
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply URewardsWidget_C::On_ClosedChest_MouseButtonDown_1(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "On_ClosedChest_MouseButtonDown_1");

	Params::RewardsWidget_C_On_ClosedChest_MouseButtonDown_1 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RewardsWidget.RewardsWidget_C.OnHandleAction
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEventReply                      Result                                                 (Parm, OutParm)
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URewardsWidget_C::OnHandleAction(struct FEventReply* Result, bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsWidget_C", "OnHandleAction");

	Params::RewardsWidget_C_OnHandleAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}

}

