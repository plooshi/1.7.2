#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemTransformSlotScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.ExecuteUbergraph_ItemTransformSlotScreen
// 0x0028 (0x0028 - 0x0000)
struct ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_ComponentBoundEvent_SelectedItem;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemTransformSlotEntry_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_SacrificePoints;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_CurrentTier;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_TransformActive;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen");
static_assert(sizeof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen) == 0x000028, "Wrong size on ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen");
static_assert(offsetof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen, EntryPoint) == 0x000000, "Member 'ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen, K2Node_ComponentBoundEvent_SelectedItem) == 0x000008, "Member 'ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen, CallFunc_Array_Get_Item) == 0x000010, "Member 'ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen, K2Node_ComponentBoundEvent_SacrificePoints) == 0x000018, "Member 'ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen::K2Node_ComponentBoundEvent_SacrificePoints' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen, K2Node_ComponentBoundEvent_CurrentTier) == 0x00001C, "Member 'ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen::K2Node_ComponentBoundEvent_CurrentTier' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen, K2Node_ComponentBoundEvent_TransformActive) == 0x000020, "Member 'ItemTransformSlotScreen_C_ExecuteUbergraph_ItemTransformSlotScreen::K2Node_ComponentBoundEvent_TransformActive' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature final
{
public:
	bool                                          TransformActive;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature) == 0x000001, "Wrong alignment on ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature");
static_assert(sizeof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature) == 0x000001, "Wrong size on ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature");
static_assert(offsetof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature, TransformActive) == 0x000000, "Member 'ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_225_OnUpdateSacrificeInfo__DelegateSignature::TransformActive' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature final
{
public:
	int32                                         SacrificePoints;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTier;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature) == 0x000004, "Wrong alignment on ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature");
static_assert(sizeof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature) == 0x000008, "Wrong size on ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature");
static_assert(offsetof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature, SacrificePoints) == 0x000000, "Member 'ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature::SacrificePoints' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature, CurrentTier) == 0x000004, "Member 'ItemTransformSlotScreen_C_BndEvt__ItemTransformResultInfo_K2Node_ComponentBoundEvent_2_OnTransformConfirmed__DelegateSignature::CurrentTier' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature");
static_assert(sizeof(ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature) == 0x000008, "Wrong size on ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature");
static_assert(offsetof(ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature, SelectedItem) == 0x000000, "Member 'ItemTransformSlotScreen_C_BndEvt__ItemTransformItemPicker_K2Node_ComponentBoundEvent_0_OnItemSelected__DelegateSignature::SelectedItem' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.OpenSlotScreen
// 0x0010 (0x0010 - 0x0000)
struct ItemTransformSlotScreen_C_OpenSlotScreen final
{
public:
	class UFortItem*                              Key;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_OpenSlotScreen) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_OpenSlotScreen");
static_assert(sizeof(ItemTransformSlotScreen_C_OpenSlotScreen) == 0x000010, "Wrong size on ItemTransformSlotScreen_C_OpenSlotScreen");
static_assert(offsetof(ItemTransformSlotScreen_C_OpenSlotScreen, Key) == 0x000000, "Member 'ItemTransformSlotScreen_C_OpenSlotScreen::Key' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_OpenSlotScreen, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'ItemTransformSlotScreen_C_OpenSlotScreen::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.OpenItemPicker
// 0x0008 (0x0008 - 0x0000)
struct ItemTransformSlotScreen_C_OpenItemPicker final
{
public:
	class UItemTransformSlotEntry_C*              CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_OpenItemPicker) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_OpenItemPicker");
static_assert(sizeof(ItemTransformSlotScreen_C_OpenItemPicker) == 0x000008, "Wrong size on ItemTransformSlotScreen_C_OpenItemPicker");
static_assert(offsetof(ItemTransformSlotScreen_C_OpenItemPicker, CallFunc_Array_Get_Item) == 0x000000, "Member 'ItemTransformSlotScreen_C_OpenItemPicker::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.SetupSlotScreen
// 0x0038 (0x0038 - 0x0000)
struct ItemTransformSlotScreen_C_SetupSlotScreen final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemTransformSlotEntry_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_SetupSlotScreen) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_SetupSlotScreen");
static_assert(sizeof(ItemTransformSlotScreen_C_SetupSlotScreen) == 0x000038, "Wrong size on ItemTransformSlotScreen_C_SetupSlotScreen");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Get_Item) == 0x000010, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Add_ReturnValue2) == 0x000024, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Add_ReturnValue3) == 0x000028, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Add_ReturnValue4) == 0x00002C, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_SetupSlotScreen, CallFunc_Array_Add_ReturnValue5) == 0x000030, "Member 'ItemTransformSlotScreen_C_SetupSlotScreen::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.CloseItemPicker
// 0x0020 (0x0020 - 0x0000)
struct ItemTransformSlotScreen_C_CloseItemPicker final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemTransformSlotEntry_C*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_CloseItemPicker) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_CloseItemPicker");
static_assert(sizeof(ItemTransformSlotScreen_C_CloseItemPicker) == 0x000020, "Wrong size on ItemTransformSlotScreen_C_CloseItemPicker");
static_assert(offsetof(ItemTransformSlotScreen_C_CloseItemPicker, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'ItemTransformSlotScreen_C_CloseItemPicker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_CloseItemPicker, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'ItemTransformSlotScreen_C_CloseItemPicker::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_CloseItemPicker, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'ItemTransformSlotScreen_C_CloseItemPicker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_CloseItemPicker, CallFunc_Array_Get_Item) == 0x000018, "Member 'ItemTransformSlotScreen_C_CloseItemPicker::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.ResetScreen
// 0x0018 (0x0018 - 0x0000)
struct ItemTransformSlotScreen_C_ResetScreen final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItem*                        Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_ResetScreen) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_ResetScreen");
static_assert(sizeof(ItemTransformSlotScreen_C_ResetScreen) == 0x000018, "Wrong size on ItemTransformSlotScreen_C_ResetScreen");
static_assert(offsetof(ItemTransformSlotScreen_C_ResetScreen, Temp_int_Variable) == 0x000000, "Member 'ItemTransformSlotScreen_C_ResetScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ResetScreen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'ItemTransformSlotScreen_C_ResetScreen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ResetScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ItemTransformSlotScreen_C_ResetScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_ResetScreen, Temp_object_Variable) == 0x000010, "Member 'ItemTransformSlotScreen_C_ResetScreen::Temp_object_Variable' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.Get Transform Data
// 0x0020 (0x0020 - 0x0000)
struct ItemTransformSlotScreen_C_Get_Transform_Data final
{
public:
	TArray<class UFortItem*>                      SacrificeItems_0;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	int32                                         CurrentSacrificePoints;                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTier;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Transform_Data_CurrentSacrificePoints; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Transform_Data_CurrentTier;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_Get_Transform_Data) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_Get_Transform_Data");
static_assert(sizeof(ItemTransformSlotScreen_C_Get_Transform_Data) == 0x000020, "Wrong size on ItemTransformSlotScreen_C_Get_Transform_Data");
static_assert(offsetof(ItemTransformSlotScreen_C_Get_Transform_Data, SacrificeItems_0) == 0x000000, "Member 'ItemTransformSlotScreen_C_Get_Transform_Data::SacrificeItems_0' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_Get_Transform_Data, CurrentSacrificePoints) == 0x000010, "Member 'ItemTransformSlotScreen_C_Get_Transform_Data::CurrentSacrificePoints' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_Get_Transform_Data, CurrentTier) == 0x000014, "Member 'ItemTransformSlotScreen_C_Get_Transform_Data::CurrentTier' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_Get_Transform_Data, CallFunc_Get_Transform_Data_CurrentSacrificePoints) == 0x000018, "Member 'ItemTransformSlotScreen_C_Get_Transform_Data::CallFunc_Get_Transform_Data_CurrentSacrificePoints' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_Get_Transform_Data, CallFunc_Get_Transform_Data_CurrentTier) == 0x00001C, "Member 'ItemTransformSlotScreen_C_Get_Transform_Data::CallFunc_Get_Transform_Data_CurrentTier' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.NavigateToFirstItem
// 0x0010 (0x0010 - 0x0000)
struct ItemTransformSlotScreen_C_NavigateToFirstItem final
{
public:
	class UItemTransformSlotEntry_C*              CallFunc_GetSlotFromIndex_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_NavigateToFirstItem) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_NavigateToFirstItem");
static_assert(sizeof(ItemTransformSlotScreen_C_NavigateToFirstItem) == 0x000010, "Wrong size on ItemTransformSlotScreen_C_NavigateToFirstItem");
static_assert(offsetof(ItemTransformSlotScreen_C_NavigateToFirstItem, CallFunc_GetSlotFromIndex_ReturnValue) == 0x000000, "Member 'ItemTransformSlotScreen_C_NavigateToFirstItem::CallFunc_GetSlotFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_NavigateToFirstItem, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'ItemTransformSlotScreen_C_NavigateToFirstItem::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function ItemTransformSlotScreen.ItemTransformSlotScreen_C.GetSlotFromIndex
// 0x0018 (0x0018 - 0x0000)
struct ItemTransformSlotScreen_C_GetSlotFromIndex final
{
public:
	class UItemTransformSlotEntry_C*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemTransformSlotEntry_C*              K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransformSlotScreen_C_GetSlotFromIndex) == 0x000008, "Wrong alignment on ItemTransformSlotScreen_C_GetSlotFromIndex");
static_assert(sizeof(ItemTransformSlotScreen_C_GetSlotFromIndex) == 0x000018, "Wrong size on ItemTransformSlotScreen_C_GetSlotFromIndex");
static_assert(offsetof(ItemTransformSlotScreen_C_GetSlotFromIndex, ReturnValue) == 0x000000, "Member 'ItemTransformSlotScreen_C_GetSlotFromIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_GetSlotFromIndex, Temp_int_Variable) == 0x000008, "Member 'ItemTransformSlotScreen_C_GetSlotFromIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransformSlotScreen_C_GetSlotFromIndex, K2Node_Select_Default) == 0x000010, "Member 'ItemTransformSlotScreen_C_GetSlotFromIndex::K2Node_Select_Default' has a wrong offset!");

}

